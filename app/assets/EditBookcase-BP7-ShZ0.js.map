{"version":3,"file":"EditBookcase-BP7-ShZ0.js","sources":["../../src/pages/bookcase/edit/EditBookcase.tsx"],"sourcesContent":["/**\n * @file edit bookcase\n * @author Yangholmes 2024-12-01\n */\n\nimport { defineComponent, onUnmounted, ref, shallowRef, watch } from 'vue';\nimport useTRouter from '@/composite/useTRouter';\nimport { useNaiveFeedback } from '@/composite/useNaiveFeedback';\nimport { I18nT, useI18n } from 'vue-i18n';\n\nimport cn from 'classnames';\n\n\nimport Editor from '../Editor';\nimport BasicTopBar from '@/pages/layout/BasicTopBar';\nimport BasicLayout from '@/pages/layout/BasicLayout';\nimport DeleteConfirmButton from '@/components/deleteConfirmButton/DeleteConfirmButton';\nimport BookcaseNameInput from '../bookcaseNameInput/BookcaseNameInput';\nimport SvgIcon from '@/components/svgIcon/SvgIcon';\n\nimport { NButton } from 'naive-ui';\n\nimport db from '@/services/db';\nimport { Bookcase, Cell } from '../utils';\n\nimport styles from './editBookcase.module.less';\n\nexport default defineComponent({\n  name: 'BookcaseEdit',\n  setup() {\n    const { t } = useI18n({ useScope: 'global' });\n    const { route, router } = useTRouter();\n    const { dialog, message } = useNaiveFeedback('top');\n\n    const bookcase = shallowRef<Bookcase>();\n    const bookcaseName = ref<string>('');\n\n    const loading = ref<boolean>(false);\n\n    watch(() => route.params, (params) => {\n      const id = params.id as string;\n      if (id) {\n        loading.value = true;\n        db.bookcase.queryBookcaseById(id).then(res => {\n          bookcase.value = res;\n          bookcaseName.value = res?.name || '';\n        }).finally(() => {\n          loading.value = false;\n        });\n      }\n    }, {\n      immediate: true,\n    });\n\n    const editorRef = ref<typeof Editor>();\n\n    /** 是否有编辑过 */\n    const hasEdited = ref(false);\n    const onMerge = () => {\n      // 当前选中的单元格\n      const oldCells = editorRef.value?.getActiveCells() as Cell[];\n      db.book.queryBooksCountByCellIds(oldCells.map(cell => cell.id || '')).then(counts => {\n        if (counts === 0) {\n          hasEdited.value = true;\n          editorRef.value?.mergeCells();\n        } else {\n          dialog.warning({\n            closable: false,\n            maskClosable: false,\n            title: t('pages.bookcase.edit.mergeDialog.title'),\n            content: () => <>\n              <I18nT scope=\"global\" keypath=\"pages.bookcase.edit.mergeDialog.content.count\" tag=\"div\" >\n                {counts}\n              </I18nT>\n              <I18nT scope=\"global\" keypath=\"pages.bookcase.edit.mergeDialog.content.tip\" tag=\"div\" />\n            </>,\n            positiveText: t('pages.bookcase.edit.mergeDialog.positiveText'),\n            negativeText: t('common.forgetIt'),\n            onPositiveClick() {\n              // 合并后的新单元格\n              const newCell = editorRef.value?.mergeCells() as Cell | null;\n              // 书柜数据\n              const editorData: Bookcase = editorRef.value?.getData();\n              if (!newCell) {\n                return;\n              }\n              // 先更新书柜\n              db.bookcase.updateBookcase({\n                ...editorData,\n                name: bookcaseName.value,\n              }).then(newBookcase => {\n                // 找到插入的新单元格\n                const _cell = newBookcase.cells.find(c => {\n                  return c.from.join(',') === newCell.from.join(',') && c.to.join(',') === newCell.to.join(',');\n                });\n                if (_cell) {\n                  db.book.moveBooksToNewCell(oldCells.map(cell => cell.id || ''), _cell.id || '').then(() => {\n                    message.success(t('pages.bookcase.edit.mergeDialog.mergeFinished'));\n                  }).finally(() => {\n                    bookcase.value = newBookcase;\n                    hasEdited.value = false;\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    };\n\n    const onBreak = () => {\n      const cells = editorRef.value?.getActiveCells() as Cell[];\n      if (cells.length === 1) {\n        const id = cells[0].id;\n        if (id) {\n          db.book.queryBooksByCellId(id).then(books => {\n            if (books.length > 0) {\n              message.error(t('pages.bookcase.edit.break.cannotBreak'));\n            } else {\n              hasEdited.value = true;\n              editorRef.value?.breakCell();\n            }\n          });\n        } else {\n          hasEdited.value = true;\n          editorRef.value?.breakCell();\n        }\n      }\n    };\n\n    const onManageCell = () => {\n      const cells: Cell[] = editorRef.value?.getActiveCells();\n      if (cells.length === 0) {\n        message.warning(t('pages.bookcase.edit.manageCell.noCell'));\n        return;\n      }\n      if (cells.length > 1) {\n        message.warning(t('pages.bookcase.edit.manageCell.tooManyCells'));\n        return;\n      }\n      if (!cells[0].id || hasEdited.value) {\n        message.warning(t('pages.bookcase.edit.manageCell.unsave'));\n        return;\n      }\n      router.push({\n        path: `/cell/${cells[0].id}`\n      });\n    };\n\n    const onDelete = () => {\n      const id = bookcase.value?.id;\n      if (id) {\n        loading.value = true;\n        db.bookcase.deleteBookcase(id).then(() => {\n          router.back();\n        }).then(() => {\n          loading.value = false;\n        });\n      }\n    };\n\n    const onSave = () => {\n      if (!bookcaseName.value) {\n        message.error(t('pages.bookcase.edit.save.titleRequired'));\n        return;\n      }\n      loading.value = true;\n      const editorData: Bookcase = editorRef.value?.getData();\n\n      db.bookcase.updateBookcase({\n        ...editorData,\n        name: bookcaseName.value,\n      }).then(res => {\n        bookcase.value = res;\n        message.success(t('pages.bookcase.edit.save.success'));\n      }).then(() => {\n        loading.value = false;\n        hasEdited.value = false;\n      });\n    };\n\n    onUnmounted(() => {\n      message.destroyAll();\n    });\n\n    return () => (\n      <BasicLayout\n        loading={loading.value}\n        topBar={\n          <BasicTopBar\n            rightSlots={[\n              <NButton onClick={onSave}>\n                <SvgIcon name=\"save\" />\n              </NButton>,\n              <DeleteConfirmButton onConfirm={onDelete}>\n                <SvgIcon name=\"delete\" />\n              </DeleteConfirmButton>,\n            ]}\n          >\n            {t('pages.bookcase.edit.topbar.title')}\n          </BasicTopBar>\n        }\n        toolBar={[\n          <NButton\n            class={cn(styles.blur)}\n            size=\"large\"\n            circle strong tertiary\n            onClick={() => {\n              editorRef.value?.resetView();\n            }}\n          >\n            <SvgIcon name=\"restore\" />\n          </NButton>,\n          <NButton\n            class={cn(styles.blur)}\n            size=\"large\"\n            circle strong tertiary\n            onClick={onMerge}\n          >\n            <SvgIcon name=\"mergeCells\" />\n          </NButton>,\n          <NButton\n            class={cn(styles.blur)}\n            size=\"large\"\n            circle strong tertiary\n            onClick={onBreak}\n          >\n            <SvgIcon name=\"breakCells\" />\n          </NButton>,\n          <NButton\n            class={cn(styles.blur)}\n            size=\"large\"\n            circle strong tertiary\n            onClick={onManageCell}\n          >\n            <SvgIcon name=\"openCase\" />\n          </NButton>\n        ]}\n      >\n        <div class={cn(styles['edit-bookcase'])}>\n          <div class={cn(styles.title, styles.blur)}>\n            <BookcaseNameInput\n              isDual=\"dual\"\n              value={bookcaseName.value}\n              onChange={(val) => {\n                bookcaseName.value = val;\n              }}\n            />\n          </div>\n          <Editor ref={editorRef} data={bookcase.value} />\n        </div>\n      </BasicLayout>\n    );\n  }\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","setup","t","useI18n","useScope","route","router","useTRouter","dialog","message","useNaiveFeedback","bookcase","shallowRef","bookcaseName","ref","loading","watch","params","id","value","db","queryBookcaseById","then","res","finally","immediate","editorRef","hasEdited","onMerge","oldCells","getActiveCells","book","queryBooksCountByCellIds","map","cell","counts","mergeCells","warning","closable","maskClosable","title","content","_createVNode","_Fragment","I18nT","default","positiveText","negativeText","onPositiveClick","newCell","editorData","getData","updateBookcase","newBookcase","_cell","cells","find","c","from","join","to","moveBooksToNewCell","success","onBreak","length","queryBooksByCellId","books","error","breakCell","onManageCell","push","path","onDelete","deleteBookcase","back","onSave","onUnmounted","destroyAll","_slot","BasicLayout","BasicTopBar","NButton","SvgIcon","DeleteConfirmButton","cn","styles","blur","onClick","resetView","BookcaseNameInput","val","Editor"],"mappings":"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"}