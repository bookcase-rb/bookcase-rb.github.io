{"version":3,"file":"InputNumber-J60KDmti.js","sources":["../../node_modules/.pnpm/naive-ui@2.41.0_vue@3.5.12_typescript@5.6.3_/node_modules/naive-ui/es/_internal/icons/Add.mjs","../../node_modules/.pnpm/naive-ui@2.41.0_vue@3.5.12_typescript@5.6.3_/node_modules/naive-ui/es/_internal/icons/Remove.mjs","../../node_modules/.pnpm/naive-ui@2.41.0_vue@3.5.12_typescript@5.6.3_/node_modules/naive-ui/es/input-number/styles/light.mjs","../../node_modules/.pnpm/naive-ui@2.41.0_vue@3.5.12_typescript@5.6.3_/node_modules/naive-ui/es/input-number/src/styles/input-number.cssr.mjs","../../node_modules/.pnpm/naive-ui@2.41.0_vue@3.5.12_typescript@5.6.3_/node_modules/naive-ui/es/input-number/src/utils.mjs","../../node_modules/.pnpm/naive-ui@2.41.0_vue@3.5.12_typescript@5.6.3_/node_modules/naive-ui/es/input-number/src/InputNumber.mjs"],"sourcesContent":["import { defineComponent, h } from 'vue';\nexport default defineComponent({\n  name: 'Add',\n  render() {\n    return h(\"svg\", {\n      width: \"512\",\n      height: \"512\",\n      viewBox: \"0 0 512 512\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, h(\"path\", {\n      d: \"M256 112V400M400 256H112\",\n      stroke: \"currentColor\",\n      \"stroke-width\": \"32\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\"\n    }));\n  }\n});","import { defineComponent, h } from 'vue';\nexport default defineComponent({\n  name: 'Remove',\n  render() {\n    return h(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 512 512\"\n    }, h(\"line\", {\n      x1: \"400\",\n      y1: \"256\",\n      x2: \"112\",\n      y2: \"256\",\n      style: \"\\n        fill: none;\\n        stroke: currentColor;\\n        stroke-linecap: round;\\n        stroke-linejoin: round;\\n        stroke-width: 32px;\\n      \"\n    }));\n  }\n});","import { createTheme } from \"../../_mixins/index.mjs\";\nimport { commonLight } from \"../../_styles/common/index.mjs\";\nimport { buttonLight } from \"../../button/styles/index.mjs\";\nimport { inputLight } from \"../../input/styles/index.mjs\";\nfunction self(vars) {\n  const {\n    textColorDisabled\n  } = vars;\n  return {\n    iconColorDisabled: textColorDisabled\n  };\n}\nconst inputNumberLight = createTheme({\n  name: 'InputNumber',\n  common: commonLight,\n  peers: {\n    Button: buttonLight,\n    Input: inputLight\n  },\n  self\n});\nexport default inputNumberLight;","import { c, cB } from \"../../../_utils/cssr/index.mjs\";\nexport default c([cB('input-number-suffix', `\n display: inline-block;\n margin-right: 10px;\n `), cB('input-number-prefix', `\n display: inline-block;\n margin-left: 10px;\n `)]);","// string => string (expected, not implemented)\n// string => number (legacy)\nexport function parse(value) {\n  if (value === undefined || value === null || typeof value === 'string' && value.trim() === '') {\n    return null;\n  }\n  return Number(value);\n}\n// This function is created for `update-value-on-input` prop. When the prop is\n// true, the input value will update the value and <input />'s value at the same\n// time. So we need to make user's content won't be replaced by its parsed value\n// in some certain cases. For example '0.' should be parsed and replaced by '0',\n// '-0' should be parsed and replaced by '0', since user may input '-0.1' after.\nexport function isWipValue(value) {\n  return value.includes('.') && (/^(-)?\\d+.*(\\.|0)$/.test(value) || /^-?\\d*$/.test(value)) || value === '-' || value === '-0';\n}\n// string => boolean (expected, not implemented)\n// number => boolean (legacy)\nexport function validator(value) {\n  if (value === undefined || value === null) return true;\n  if (Number.isNaN(value)) return false;\n  return true;\n}\n// string => string (expected, not implemented)\n// number => string (legacy)\nexport function format(value, precision) {\n  if (typeof value !== 'number') return '';\n  return precision === undefined ? String(value) : value.toFixed(precision);\n}\nexport function parseNumber(number) {\n  if (number === null) return null;\n  if (typeof number === 'number') {\n    return number;\n  } else {\n    const parsedNumber = Number(number);\n    if (Number.isNaN(parsedNumber)) {\n      return null;\n    } else {\n      return parsedNumber;\n    }\n  }\n}","import { on } from 'evtd';\nimport { rgba } from 'seemly';\nimport { useMemo, useMergedState } from 'vooks';\nimport { computed, defineComponent, h, nextTick, ref, toRef, watch, watchEffect } from 'vue';\nimport { NBaseIcon } from \"../../_internal/index.mjs\";\nimport { AddIcon, RemoveIcon } from \"../../_internal/icons/index.mjs\";\nimport { useConfig, useFormItem, useLocale, useTheme } from \"../../_mixins/index.mjs\";\nimport { useRtl } from \"../../_mixins/use-rtl.mjs\";\nimport { call, resolveSlot, resolveWrappedSlot, warnOnce } from \"../../_utils/index.mjs\";\nimport { NxButton } from \"../../button/index.mjs\";\nimport { NInput } from \"../../input/index.mjs\";\nimport { inputNumberLight } from \"../styles/index.mjs\";\nimport style from \"./styles/input-number.cssr.mjs\";\nimport { format, isWipValue, parse, parseNumber, validator } from \"./utils.mjs\";\nconst HOLDING_CHANGE_THRESHOLD = 800;\nconst HOLDING_CHANGE_INTERVAL = 100;\nexport const inputNumberProps = Object.assign(Object.assign({}, useTheme.props), {\n  autofocus: Boolean,\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  placeholder: String,\n  defaultValue: {\n    type: Number,\n    default: null\n  },\n  value: Number,\n  step: {\n    type: [Number, String],\n    default: 1\n  },\n  min: [Number, String],\n  max: [Number, String],\n  size: String,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  validator: Function,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  showButton: {\n    type: Boolean,\n    default: true\n  },\n  buttonPlacement: {\n    type: String,\n    default: 'right'\n  },\n  inputProps: Object,\n  readonly: Boolean,\n  clearable: Boolean,\n  keyboard: {\n    type: Object,\n    default: {}\n  },\n  updateValueOnInput: {\n    type: Boolean,\n    default: true\n  },\n  round: {\n    type: Boolean,\n    default: undefined\n  },\n  parse: Function,\n  format: Function,\n  precision: Number,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  onFocus: [Function, Array],\n  onBlur: [Function, Array],\n  onClear: [Function, Array],\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'InputNumber',\n  props: inputNumberProps,\n  slots: Object,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange !== undefined) {\n          warnOnce('input-number', '`on-change` is deprecated, please use `on-update:value` instead');\n        }\n      });\n    }\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('InputNumber', '-input-number', style, inputNumberLight, props, mergedClsPrefixRef);\n    const {\n      localeRef\n    } = useLocale('InputNumber');\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    // dom ref\n    const inputInstRef = ref(null);\n    const minusButtonInstRef = ref(null);\n    const addButtonInstRef = ref(null);\n    // value\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const displayedValueRef = ref('');\n    const getPrecision = value => {\n      const fraction = String(value).split('.')[1];\n      return fraction ? fraction.length : 0;\n    };\n    const getMaxPrecision = currentValue => {\n      const precisions = [props.min, props.max, props.step, currentValue].map(value => {\n        if (value === undefined) return 0;\n        return getPrecision(value);\n      });\n      return Math.max(...precisions);\n    };\n    const mergedPlaceholderRef = useMemo(() => {\n      const {\n        placeholder\n      } = props;\n      if (placeholder !== undefined) return placeholder;\n      return localeRef.value.placeholder;\n    });\n    const mergedStepRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.step);\n      if (parsedNumber !== null) {\n        return parsedNumber === 0 ? 1 : Math.abs(parsedNumber);\n      }\n      return 1;\n    });\n    const mergedMinRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.min);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n    const mergedMaxRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.max);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n    const deriveDisplayedValueFromValue = () => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (validator(mergedValue)) {\n        const {\n          format: formatProp,\n          precision\n        } = props;\n        if (formatProp) {\n          displayedValueRef.value = formatProp(mergedValue);\n        } else {\n          if (mergedValue === null || precision === undefined\n          // precision overflow\n          || getPrecision(mergedValue) > precision) {\n            displayedValueRef.value = format(mergedValue, undefined);\n          } else {\n            displayedValueRef.value = format(mergedValue, precision);\n          }\n        }\n      } else {\n        // null can pass the validator check\n        // so mergedValue is a number\n        displayedValueRef.value = String(mergedValue);\n      }\n    };\n    deriveDisplayedValueFromValue();\n    const doUpdateValue = value => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (value === mergedValue) {\n        deriveDisplayedValueFromValue();\n        return;\n      }\n      const {\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue,\n        onChange\n      } = props;\n      const {\n        nTriggerFormInput,\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value);\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    };\n    const deriveValueFromDisplayedValue = ({\n      offset,\n      doUpdateIfValid,\n      fixPrecision,\n      isInputing\n    }) => {\n      const {\n        value: displayedValue\n      } = displayedValueRef;\n      if (isInputing && isWipValue(displayedValue)) {\n        return false;\n      }\n      const parsedValue = (props.parse || parse)(displayedValue);\n      if (parsedValue === null) {\n        if (doUpdateIfValid) doUpdateValue(null);\n        return null;\n      }\n      if (validator(parsedValue)) {\n        const currentPrecision = getPrecision(parsedValue);\n        const {\n          precision\n        } = props;\n        if (precision !== undefined && precision < currentPrecision && !fixPrecision) {\n          return false;\n        }\n        let nextValue = Number.parseFloat((parsedValue + offset).toFixed(precision !== null && precision !== void 0 ? precision : getMaxPrecision(parsedValue)));\n        if (validator(nextValue)) {\n          const {\n            value: mergedMax\n          } = mergedMaxRef;\n          const {\n            value: mergedMin\n          } = mergedMinRef;\n          if (mergedMax !== null && nextValue > mergedMax) {\n            if (!doUpdateIfValid || isInputing) return false;\n            // if doUpdateIfValid=true, we try to make it a valid value\n            nextValue = mergedMax;\n          }\n          if (mergedMin !== null && nextValue < mergedMin) {\n            if (!doUpdateIfValid || isInputing) return false;\n            // if doUpdateIfValid=true, we try to make it a valid value\n            nextValue = mergedMin;\n          }\n          if (props.validator && !props.validator(nextValue)) return false;\n          if (doUpdateIfValid) doUpdateValue(nextValue);\n          return nextValue;\n        }\n      }\n      return false;\n    };\n    const displayedValueInvalidRef = useMemo(() => {\n      const derivedValue = deriveValueFromDisplayedValue({\n        offset: 0,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedValue === false;\n    });\n    const minusableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue({\n        offset: -mergedStep,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedNextValue !== false;\n    });\n    const addableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue({\n        offset: +mergedStep,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedNextValue !== false;\n    });\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n    function doBlur(e) {\n      var _a, _b;\n      if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n        // hit input wrapper\n        // which means not activated\n        return;\n      }\n      const value = deriveValueFromDisplayedValue({\n        offset: 0,\n        doUpdateIfValid: true,\n        isInputing: false,\n        fixPrecision: true\n      });\n      // If valid, update event has been emitted\n      // make sure e.target.value is correct in blur callback\n      if (value !== false) {\n        const inputElRef = (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.inputElRef;\n        if (inputElRef) {\n          inputElRef.value = String(value || '');\n        }\n        // If value is not changed, the displayed value may be greater than or\n        // less than the current value. The derived value is reformatted so the\n        // value is not changed. We can simply derive a new displayed value\n        if (mergedValueRef.value === value) {\n          deriveDisplayedValueFromValue();\n        }\n      } else {\n        // If not valid, nothing will be emitted, so derive displayed value from\n        // origin value\n        deriveDisplayedValueFromValue();\n      }\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n      // User may change value in blur callback, we make sure it will be\n      // displayed. Sometimes mergedValue won't be viewed as changed\n      void nextTick(() => {\n        deriveDisplayedValueFromValue();\n      });\n    }\n    function doClear(e) {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear, e);\n    }\n    function doAdd() {\n      const {\n        value: addable\n      } = addableRef;\n      if (!addable) {\n        clearAddHoldTimeout();\n        return;\n      }\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue({\n          offset: mergedStep,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n      }\n    }\n    function doMinus() {\n      const {\n        value: minusable\n      } = minusableRef;\n      if (!minusable) {\n        clearMinusHoldTimeout();\n        return;\n      }\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue({\n          offset: -mergedStep,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n      }\n    }\n    const handleFocus = doFocus;\n    const handleBlur = doBlur;\n    function createValidValue() {\n      if (props.validator) return null;\n      const {\n        value: mergedMin\n      } = mergedMinRef;\n      const {\n        value: mergedMax\n      } = mergedMaxRef;\n      if (mergedMin !== null) {\n        return Math.max(0, mergedMin);\n      } else if (mergedMax !== null) {\n        return Math.min(0, mergedMax);\n      } else {\n        return 0;\n      }\n    }\n    function handleClear(e) {\n      doClear(e);\n      doUpdateValue(null);\n    }\n    function handleMouseDown(e) {\n      var _a, _b, _c;\n      if ((_a = addButtonInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n      if ((_b = minusButtonInstRef.value) === null || _b === void 0 ? void 0 : _b.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n      (_c = inputInstRef.value) === null || _c === void 0 ? void 0 : _c.activate();\n    }\n    let minusHoldStateIntervalId = null;\n    let addHoldStateIntervalId = null;\n    let firstMinusMousedownId = null;\n    function clearMinusHoldTimeout() {\n      if (firstMinusMousedownId) {\n        window.clearTimeout(firstMinusMousedownId);\n        firstMinusMousedownId = null;\n      }\n      if (minusHoldStateIntervalId) {\n        window.clearInterval(minusHoldStateIntervalId);\n        minusHoldStateIntervalId = null;\n      }\n    }\n    let firstAddMousedownId = null;\n    function clearAddHoldTimeout() {\n      if (firstAddMousedownId) {\n        window.clearTimeout(firstAddMousedownId);\n        firstAddMousedownId = null;\n      }\n      if (addHoldStateIntervalId) {\n        window.clearInterval(addHoldStateIntervalId);\n        addHoldStateIntervalId = null;\n      }\n    }\n    function handleMinusMousedown() {\n      clearMinusHoldTimeout();\n      firstMinusMousedownId = window.setTimeout(() => {\n        minusHoldStateIntervalId = window.setInterval(() => {\n          doMinus();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, clearMinusHoldTimeout, {\n        once: true\n      });\n    }\n    function handleAddMousedown() {\n      clearAddHoldTimeout();\n      firstAddMousedownId = window.setTimeout(() => {\n        addHoldStateIntervalId = window.setInterval(() => {\n          doAdd();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, clearAddHoldTimeout, {\n        once: true\n      });\n    }\n    const handleAddClick = () => {\n      if (addHoldStateIntervalId) return;\n      doAdd();\n    };\n    const handleMinusClick = () => {\n      if (minusHoldStateIntervalId) return;\n      doMinus();\n    };\n    function handleKeyDown(e) {\n      var _a, _b;\n      if (e.key === 'Enter') {\n        if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n          // hit input wrapper\n          // which means not activated\n          return;\n        }\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.deactivate();\n        }\n      } else if (e.key === 'ArrowUp') {\n        if (!addableRef.value) return;\n        if (props.keyboard.ArrowUp === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          doAdd();\n        }\n      } else if (e.key === 'ArrowDown') {\n        if (!minusableRef.value) return;\n        if (props.keyboard.ArrowDown === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          doMinus();\n        }\n      }\n    }\n    function handleUpdateDisplayedValue(value) {\n      displayedValueRef.value = value;\n      if (props.updateValueOnInput && !props.format && !props.parse && props.precision === undefined) {\n        deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: true,\n          fixPrecision: false\n        });\n      }\n    }\n    watch(mergedValueRef, () => {\n      deriveDisplayedValueFromValue();\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      select: () => {\n        var _a;\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.select();\n      }\n    };\n    const rtlEnabledRef = useRtl('InputNumber', mergedRtlRef, mergedClsPrefixRef);\n    return Object.assign(Object.assign({}, exposedMethods), {\n      rtlEnabled: rtlEnabledRef,\n      inputInstRef,\n      minusButtonInstRef,\n      addButtonInstRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      displayedValueInvalid: displayedValueInvalidRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      displayedValue: displayedValueRef,\n      addable: addableRef,\n      minusable: minusableRef,\n      mergedStatus: mergedStatusRef,\n      handleFocus,\n      handleBlur,\n      handleClear,\n      handleMouseDown,\n      handleAddClick,\n      handleMinusClick,\n      handleAddMousedown,\n      handleMinusMousedown,\n      handleKeyDown,\n      handleUpdateDisplayedValue,\n      // theme\n      mergedTheme: themeRef,\n      inputThemeOverrides: {\n        paddingSmall: '0 8px 0 10px',\n        paddingMedium: '0 8px 0 12px',\n        paddingLarge: '0 8px 0 14px'\n      },\n      buttonThemeOverrides: computed(() => {\n        const {\n          self: {\n            iconColorDisabled\n          }\n        } = themeRef.value;\n        const [r, g, b, a] = rgba(iconColorDisabled);\n        return {\n          textColorTextDisabled: `rgb(${r}, ${g}, ${b})`,\n          opacityDisabled: `${a}`\n        };\n      })\n    });\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      $slots\n    } = this;\n    const renderMinusButton = () => {\n      return h(NxButton, {\n        text: true,\n        disabled: !this.minusable || this.mergedDisabled || this.readonly,\n        focusable: false,\n        theme: this.mergedTheme.peers.Button,\n        themeOverrides: this.mergedTheme.peerOverrides.Button,\n        builtinThemeOverrides: this.buttonThemeOverrides,\n        onClick: this.handleMinusClick,\n        onMousedown: this.handleMinusMousedown,\n        ref: \"minusButtonInstRef\"\n      }, {\n        icon: () => resolveSlot($slots['minus-icon'], () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(RemoveIcon, null)\n        })])\n      });\n    };\n    const renderAddButton = () => {\n      return h(NxButton, {\n        text: true,\n        disabled: !this.addable || this.mergedDisabled || this.readonly,\n        focusable: false,\n        theme: this.mergedTheme.peers.Button,\n        themeOverrides: this.mergedTheme.peerOverrides.Button,\n        builtinThemeOverrides: this.buttonThemeOverrides,\n        onClick: this.handleAddClick,\n        onMousedown: this.handleAddMousedown,\n        ref: \"addButtonInstRef\"\n      }, {\n        icon: () => resolveSlot($slots['add-icon'], () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        })])\n      });\n    };\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-input-number`, this.rtlEnabled && `${mergedClsPrefix}-input-number--rtl`]\n    }, h(NInput, {\n      ref: \"inputInstRef\",\n      autofocus: this.autofocus,\n      status: this.mergedStatus,\n      bordered: this.mergedBordered,\n      loading: this.loading,\n      value: this.displayedValue,\n      onUpdateValue: this.handleUpdateDisplayedValue,\n      theme: this.mergedTheme.peers.Input,\n      themeOverrides: this.mergedTheme.peerOverrides.Input,\n      builtinThemeOverrides: this.inputThemeOverrides,\n      size: this.mergedSize,\n      placeholder: this.mergedPlaceholder,\n      disabled: this.mergedDisabled,\n      readonly: this.readonly,\n      round: this.round,\n      textDecoration: this.displayedValueInvalid ? 'line-through' : undefined,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeydown: this.handleKeyDown,\n      onMousedown: this.handleMouseDown,\n      onClear: this.handleClear,\n      clearable: this.clearable,\n      inputProps: this.inputProps,\n      internalLoadingBeforeSuffix: true\n    }, {\n      prefix: () => {\n        var _a;\n        return this.showButton && this.buttonPlacement === 'both' ? [renderMinusButton(), resolveWrappedSlot($slots.prefix, children => {\n          if (children) {\n            return h(\"span\", {\n              class: `${mergedClsPrefix}-input-number-prefix`\n            }, children);\n          }\n          return null;\n        })] : (_a = $slots.prefix) === null || _a === void 0 ? void 0 : _a.call($slots);\n      },\n      suffix: () => {\n        var _a;\n        return this.showButton ? [resolveWrappedSlot($slots.suffix, children => {\n          if (children) {\n            return h(\"span\", {\n              class: `${mergedClsPrefix}-input-number-suffix`\n            }, children);\n          }\n          return null;\n        }), this.buttonPlacement === 'right' ? renderMinusButton() : null, renderAddButton()] : (_a = $slots.suffix) === null || _a === void 0 ? void 0 : _a.call($slots);\n      }\n    }));\n  }\n});"],"names":["AddIcon","defineComponent","h","RemoveIcon","self","vars","textColorDisabled","inputNumberLight","createTheme","commonLight","buttonLight","inputLight","style","c","cB","parse","value","isWipValue","validator","format","precision","parseNumber","number","parsedNumber","HOLDING_CHANGE_THRESHOLD","HOLDING_CHANGE_INTERVAL","inputNumberProps","useTheme","NInputNumber","props","mergedBorderedRef","mergedClsPrefixRef","mergedRtlRef","useConfig","themeRef","localeRef","useLocale","formItem","useFormItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","inputInstRef","ref","minusButtonInstRef","addButtonInstRef","uncontrolledValueRef","controlledValueRef","toRef","mergedValueRef","useMergedState","displayedValueRef","getPrecision","fraction","getMaxPrecision","currentValue","precisions","mergedPlaceholderRef","useMemo","placeholder","mergedStepRef","mergedMinRef","mergedMaxRef","deriveDisplayedValueFromValue","mergedValue","formatProp","doUpdateValue","_onUpdateValue","onUpdateValue","onChange","nTriggerFormInput","nTriggerFormChange","call","deriveValueFromDisplayedValue","offset","doUpdateIfValid","fixPrecision","isInputing","displayedValue","parsedValue","currentPrecision","nextValue","mergedMax","mergedMin","displayedValueInvalidRef","minusableRef","mergedStep","addableRef","doFocus","onFocus","nTriggerFormFocus","doBlur","_a","_b","inputElRef","onBlur","nTriggerFormBlur","nextTick","doClear","onClear","doAdd","addable","clearAddHoldTimeout","createValidValue","doMinus","minusable","clearMinusHoldTimeout","handleFocus","handleBlur","handleClear","handleMouseDown","_c","minusHoldStateIntervalId","addHoldStateIntervalId","firstMinusMousedownId","firstAddMousedownId","handleMinusMousedown","on","handleAddMousedown","handleAddClick","handleMinusClick","handleKeyDown","handleUpdateDisplayedValue","watch","exposedMethods","rtlEnabledRef","useRtl","computed","iconColorDisabled","r","g","b","a","rgba","mergedClsPrefix","$slots","renderMinusButton","NxButton","resolveSlot","NBaseIcon","renderAddButton","NInput","resolveWrappedSlot","children"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}