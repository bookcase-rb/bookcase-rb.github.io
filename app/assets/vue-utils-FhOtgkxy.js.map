{"version":3,"file":"vue-utils-FhOtgkxy.js","sources":["../../src/pages/vue-utils.ts"],"sourcesContent":["/**\n * @file vue-utils\n * @author Yangholmes 2025-03-22\n */\n\nimport { toRaw, isRef, isReactive } from 'vue';\n\n/**\n * 深度 vue toRaw()\n * @param obj 需要剥离响应式的对象\n */\nexport function deepToRaw<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') return obj;\n\n  // 剥离当前层级的响应式\n  const raw = toRaw(obj);\n\n  // 处理数组\n  if (Array.isArray(raw)) {\n    return raw.map(item => deepToRaw(item)) as T;\n  }\n\n  // 处理 Blob\n  if (raw instanceof Blob) {\n    return raw;\n  }\n\n  // 处理 Object\n  const result: Record<string, any> = {};\n  for (const key in raw) {\n    const value = raw[key];\n    result[key] = isRef(value) || isReactive(value)\n      ? deepToRaw(value)\n      : value;\n  }\n  return result as T;\n}"],"names":["deepToRaw","obj","raw","toRaw","item","result","key","value","isRef","isReactive"],"mappings":"yDAWO,SAASA,EAAaC,EAAW,CACtC,GAAIA,IAAQ,MAAQ,OAAOA,GAAQ,SAAiB,OAAAA,EAG9C,MAAAC,EAAMC,EAAMF,CAAG,EAGjB,GAAA,MAAM,QAAQC,CAAG,EACnB,OAAOA,EAAI,IAAYE,GAAAJ,EAAUI,CAAI,CAAC,EAIxC,GAAIF,aAAe,KACV,OAAAA,EAIT,MAAMG,EAA8B,CAAA,EACpC,UAAWC,KAAOJ,EAAK,CACf,MAAAK,EAAQL,EAAII,CAAG,EACdD,EAAAC,CAAG,EAAIE,EAAMD,CAAK,GAAKE,EAAWF,CAAK,EAC1CP,EAAUO,CAAK,EACfA,CACN,CACO,OAAAF,CACT"}