{"version":3,"file":"NewBookcase-C8eWPUO5.js","sources":["../../src/pages/bookcase/new/InitForm.tsx","../../src/pages/bookcase/new/NewBookcase.tsx"],"sourcesContent":["/**\n * @file 书柜初始化数据\n * 宽 & 高\n * @author Yangholmes 2025-03-30\n */\n\nimport { defineComponent, PropType, toRefs } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport { NForm, NFormItem, NInputNumber } from 'naive-ui';\n\nimport { defaultSize } from '../constants';\n\nexport interface CellSize {\n  width: number;\n  height: number;\n}\n\nexport default defineComponent({\n  name: 'InitForm',\n  props: {\n    size: {\n      type: Object as PropType<CellSize>,\n      default: { width: defaultSize, height: defaultSize }\n    },\n    onChange: {\n      type: Function as PropType<(size: CellSize) => void>,\n    }\n  },\n  setup(props) {\n    const { size } = toRefs(props);\n    const { t } = useI18n({ useScope: 'global' });\n\n    props.onChange?.(size.value);\n\n    function onChangeValue(value: number | null, key: keyof CellSize) {\n      if (value === null) {\n        return;\n      }\n      size.value[key] = value;\n      props.onChange?.(size.value);\n    }\n\n    return () => (<NForm\n      style={{ marginTop: '24px' }}\n      inline\n      labelPlacement=\"left\"\n      model={size.value}\n    >\n      <NFormItem label={t('common.width')} path=\"width\">\n        <NInputNumber\n          placeholder={t('common.width')}\n          buttonPlacement=\"both\"\n          min={1} max={20}\n          value={size.value?.width}\n          onChange={(value) => onChangeValue(value, 'width')}\n        />\n      </NFormItem>\n      <NFormItem label={t('common.height')} path=\"height\">\n        <NInputNumber\n          placeholder={t('common.height')}\n          buttonPlacement=\"both\"\n          min={1} max={20}\n          value={size.value?.height}\n          onChange={(value) => onChangeValue(value, 'height')}\n        />\n      </NFormItem>\n    </NForm>);\n  }\n});\n\n","/**\n * @file 新建一个书柜\n * @author Yangholmes 2024-12-22\n */\n\nimport { defineComponent, onMounted, onUnmounted, ref, shallowRef } from 'vue';\nimport useTRouter from '@/composite/useTRouter';\nimport { useI18n } from 'vue-i18n';\nimport { useNaiveFeedback } from '@/composite/useNaiveFeedback';\n\nimport cn from 'classnames';\n\nimport Editor from '../Editor';\nimport InitForm, { CellSize } from './InitForm';\nimport BasicLayout from '@/pages/layout/BasicLayout';\nimport BasicTopBar from '@/pages/layout/BasicTopBar';\nimport BookcaseNameInput from '../bookcaseNameInput/BookcaseNameInput';\nimport SvgIcon from '@/components/svgIcon/SvgIcon';\n\nimport { defaultMeta, defaultSize } from '../constants';\nimport { Bookcase, Cell } from '../utils';\nimport db from '@/services/db';\n\nimport { NButton } from 'naive-ui';\n\nimport styles from './newBookcase.module.less';\n\nexport default defineComponent({\n  name: 'BookcaseNew',\n  setup() {\n    const { t } = useI18n({ useScope: 'global' });\n    const { router } = useTRouter();\n    const { message, dialog } = useNaiveFeedback('top');\n\n    const newBookcase = shallowRef<Bookcase>();\n    const bookcaseName = ref<string>('');\n\n    const cellSize = ref<CellSize>();\n\n    const onInit = () => {\n      const { width = defaultSize, height = defaultSize } = cellSize.value || {};\n      const meta = {\n        ...defaultMeta,\n        width, height\n      };\n      const cells: Cell[] = [];\n      for (let i = 0; i < width; i++) {\n        for (let j = 0; j < height; j++) {\n          cells.push({\n            from: [i, j],\n            to: [i + 1, j + 1],\n            merge: false\n          });\n        }\n      }\n      newBookcase.value = {\n        meta,\n        cells,\n      };\n    };\n\n    onMounted(() => {\n      dialog.create({\n        title: t('pages.bookcase.newBookcase.initDialog.title'),\n        closable: false,\n        maskClosable: false,\n        closeOnEsc: false,\n        content: () => <InitForm size={cellSize.value} onChange={(size) => {\n          cellSize.value = size;\n        }} />,\n        positiveText: t('common.confirm'),\n        negativeText: t('common.forgetIt'),\n        onPositiveClick() {\n          onInit();\n        },\n        onNegativeClick() {\n          router.back();\n        }\n      });\n    });\n\n    onUnmounted(() => {\n      dialog.destroyAll();\n    });\n\n    const editorRef = ref<typeof Editor>();\n\n    const onMerge = () => {\n      editorRef.value?.mergeCells();\n    };\n\n    const onBreak = () => {\n      editorRef.value?.breakCell();\n    };\n\n    const onSave = () => {\n      if (!bookcaseName.value) {\n        message.error(t('pages.bookcase.newBookcase.bookcaseName.required'));\n        return;\n      }\n      const bookcase: Bookcase = editorRef.value?.getData();\n\n      db.bookcase.createNewBookcase({\n        ...bookcase,\n        name: bookcaseName.value\n      }).then(() => {\n        router.replace('/bookcase/list');\n      });\n    };\n\n    return () => (\n      <BasicLayout\n        topBar={\n          (<BasicTopBar rightSlots={[\n            <NButton onClick={onSave}>\n              <SvgIcon name=\"save\" />\n            </NButton>\n          ]}>\n            {t('pages.bookcase.newBookcase.topbar.title')}\n          </BasicTopBar>)\n        }\n        toolBar={[\n          <NButton\n            class={cn(styles.blur)}\n            size=\"large\"\n            circle strong tertiary\n            onClick={() => {\n              editorRef.value?.resetView();\n            }}\n          >\n            <SvgIcon name=\"restore\" />\n          </NButton>,\n          <NButton\n            class={cn(styles.blur)}\n            size=\"large\"\n            circle strong tertiary\n            onClick={onMerge}\n          >\n            <SvgIcon name=\"mergeCells\" />\n          </NButton>,\n          <NButton\n            class={cn(styles.blur)}\n            size=\"large\"\n            circle strong tertiary\n            onClick={onBreak}\n          >\n            <SvgIcon name=\"breakCells\" />\n          </NButton>\n        ]}\n      >\n        <div class={cn(styles['new-bookcase'])}>\n          <div class={cn(styles.title, styles.blur)}>\n            <BookcaseNameInput\n              isDual=\"editonly\"\n              value={bookcaseName.value}\n              onChange={(val) => {\n                bookcaseName.value = val;\n              }}\n            />\n          </div>\n          <Editor ref={editorRef} data={newBookcase.value} />\n        </div>\n      </BasicLayout>\n    );\n  }\n});\n"],"names":["defineComponent","name","props","size","type","Object","default","width","defaultSize","height","onChange","Function","setup","toRefs","t","useI18n","useScope","value","onChangeValue","key","_createVNode","NForm","marginTop","NFormItem","NInputNumber","_isSlot","s","prototype","toString","call","_isVNode","router","useTRouter","message","dialog","useNaiveFeedback","newBookcase","shallowRef","bookcaseName","ref","cellSize","onInit","meta","defaultMeta","cells","i","j","push","from","to","merge","onMounted","create","title","closable","maskClosable","closeOnEsc","content","InitForm","positiveText","negativeText","onPositiveClick","onNegativeClick","back","onUnmounted","destroyAll","editorRef","onMerge","mergeCells","onBreak","breakCell","onSave","error","bookcase","getData","db","createNewBookcase","then","replace","_slot","BasicLayout","BasicTopBar","NButton","SvgIcon","cn","styles","blur","onClick","resetView","BookcaseNameInput","val","Editor"],"mappings":"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"}