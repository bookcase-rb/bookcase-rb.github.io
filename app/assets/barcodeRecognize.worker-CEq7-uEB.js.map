{"version":3,"file":"barcodeRecognize.worker-CEq7-uEB.js","sources":["../src/assets/opencv/opencv_js.wasm?url","../src/assets/opencv/opencvImport.js","../src/components/barcode/barcodeRecognize.worker.ts"],"sourcesContent":["export default \"__VITE_ASSET__82ph8VID__\"","import opencvUrl from './opencv_js.wasm?url';\n\nvar cv = (path = '') => {\n  var _scriptName =\n    typeof document != \"undefined\" ? document.currentScript?.src : undefined;\n  if (typeof __filename != \"undefined\") _scriptName = _scriptName || __filename;\n  return async function (moduleArg = {}) {\n    var moduleRtn;\n\n    var Module = moduleArg;\n    var readyPromiseResolve, readyPromiseReject;\n    var readyPromise = new Promise((resolve, reject) => {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n    var ENVIRONMENT_IS_WEB = typeof window == \"object\";\n    var ENVIRONMENT_IS_WORKER = typeof WorkerGlobalScope != \"undefined\";\n    var ENVIRONMENT_IS_NODE =\n      typeof process == \"object\" &&\n      typeof process.versions == \"object\" &&\n      typeof process.versions.node == \"string\" &&\n      process.type != \"renderer\";\n    if (ENVIRONMENT_IS_NODE) {\n    }\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n    var scriptDirectory = \"\";\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n    var readAsync, readBinary;\n    if (ENVIRONMENT_IS_NODE) {\n      var fs = require(\"fs\");\n      var nodePath = require(\"path\");\n      scriptDirectory = __dirname + \"/\";\n      readBinary = (filename) => {\n        filename = isFileURI(filename) ? new URL(filename) : filename;\n        var ret = fs.readFileSync(filename);\n        return ret;\n      };\n      readAsync = async (filename, binary = true) => {\n        filename = isFileURI(filename) ? new URL(filename) : filename;\n        var ret = fs.readFileSync(filename, binary ? undefined : \"utf8\");\n        return ret;\n      };\n      if (process.argv.length > 1) {\n        thisProgram = process.argv[1].replace(/\\\\/g, \"/\");\n      }\n      arguments_ = process.argv.slice(2);\n      quit_ = (status, toThrow) => {\n        process.exitCode = status;\n        throw toThrow;\n      };\n    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        // scriptDirectory = self.location.href;\n      } else if (typeof document != \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n      if (_scriptName) {\n        scriptDirectory = _scriptName;\n      }\n      if (scriptDirectory.startsWith(\"blob:\")) {\n        scriptDirectory = \"\";\n      } else {\n        scriptDirectory = scriptDirectory.slice(\n          0,\n          scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1,\n        );\n      }\n      {\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.responseType = \"arraybuffer\";\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n        readAsync = async (url) => {\n          if (isFileURI(url)) {\n            return new Promise((resolve, reject) => {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n              xhr.onload = () => {\n                if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n                  resolve(xhr.response);\n                  return;\n                }\n                reject(xhr.status);\n              };\n              xhr.onerror = reject;\n              xhr.send(null);\n            });\n          }\n          var response = await fetch(url, { credentials: \"same-origin\" });\n          if (response.ok) {\n            return response.arrayBuffer();\n          }\n          throw new Error(response.status + \" : \" + response.url);\n        };\n      }\n    } else {\n    }\n    var out = console.log.bind(console);\n    var err = console.error.bind(console);\n    var wasmBinary;\n    var wasmMemory;\n    var ABORT = false;\n    var EXITSTATUS;\n    var HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n    var runtimeInitialized = false;\n    var isFileURI = (filename) => filename.startsWith(\"file://\");\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      HEAP8 = new Int8Array(b);\n      HEAP16 = new Int16Array(b);\n      HEAPU8 = new Uint8Array(b);\n      HEAPU16 = new Uint16Array(b);\n      HEAP32 = new Int32Array(b);\n      HEAPU32 = new Uint32Array(b);\n      HEAPF32 = new Float32Array(b);\n      HEAPF64 = new Float64Array(b);\n      HEAP64 = new BigInt64Array(b);\n      HEAPU64 = new BigUint64Array(b);\n    }\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\")\n          Module[\"preRun\"] = [Module[\"preRun\"]];\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(onPreRuns);\n    }\n    function initRuntime() {\n      runtimeInitialized = true;\n      if (!Module[\"noFSInit\"] && !FS.initialized) FS.init();\n      TTY.init();\n      wasmExports[\"_\"]();\n      FS.ignorePermissions = false;\n    }\n    function postRun() {\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\")\n          Module[\"postRun\"] = [Module[\"postRun\"]];\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(onPostRuns);\n    }\n    var runDependencies = 0;\n    var dependenciesFulfilled = null;\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n    function addRunDependency(id) {\n      runDependencies++;\n      Module[\"monitorRunDependencies\"]?.(runDependencies);\n    }\n    function removeRunDependency(id) {\n      runDependencies--;\n      Module[\"monitorRunDependencies\"]?.(runDependencies);\n      if (runDependencies == 0) {\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n    function abort(what) {\n      Module[\"onAbort\"]?.(what);\n      what = \"Aborted(\" + what + \")\";\n      err(what);\n      ABORT = true;\n      what += \". Build with -sASSERTIONS for more info.\";\n      var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      throw e;\n    }\n    var wasmBinaryFile;\n    function findWasmBinary() {\n      return locateFile(path);\n    }\n    function getBinarySync(file) {\n      if (file == wasmBinaryFile && wasmBinary) {\n        return new Uint8Array(wasmBinary);\n      }\n      if (readBinary) {\n        return readBinary(file);\n      }\n      throw \"both async and sync fetching of the wasm failed\";\n    }\n    async function getWasmBinary(binaryFile) {\n      if (!wasmBinary) {\n        try {\n          var response = await readAsync(binaryFile);\n          return new Uint8Array(response);\n        } catch {}\n      }\n      return getBinarySync(binaryFile);\n    }\n    async function instantiateArrayBuffer(binaryFile, imports) {\n      try {\n        var binary = await getWasmBinary(binaryFile);\n        var instance = await WebAssembly.instantiate(binary, imports);\n        return instance;\n      } catch (reason) {\n        err(`failed to asynchronously prepare wasm: ${reason}`);\n        abort(reason);\n      }\n    }\n    async function instantiateAsync(binary, binaryFile, imports) {\n      if (\n        !binary &&\n        typeof WebAssembly.instantiateStreaming == \"function\" &&\n        !isFileURI(binaryFile) &&\n        !ENVIRONMENT_IS_NODE\n      ) {\n        try {\n          var response = fetch(binaryFile, { credentials: \"same-origin\" });\n          var instantiationResult = await WebAssembly.instantiateStreaming(\n            response,\n            imports,\n          );\n          return instantiationResult;\n        } catch (reason) {\n          err(`wasm streaming compile failed: ${reason}`);\n          err(\"falling back to ArrayBuffer instantiation\");\n        }\n      }\n      return instantiateArrayBuffer(binaryFile, imports);\n    }\n    function getWasmImports() {\n      return { a: wasmImports };\n    }\n    async function createWasm() {\n      function receiveInstance(instance, module) {\n        wasmExports = instance.exports;\n        wasmMemory = wasmExports[\"Z\"];\n        updateMemoryViews();\n        wasmTable = wasmExports[\"aa\"];\n        removeRunDependency(\"wasm-instantiate\");\n        return wasmExports;\n      }\n      addRunDependency(\"wasm-instantiate\");\n      function receiveInstantiationResult(result) {\n        return receiveInstance(result[\"instance\"]);\n      }\n      var info = getWasmImports();\n      if (Module[\"instantiateWasm\"]) {\n        return new Promise((resolve, reject) => {\n          Module[\"instantiateWasm\"](info, (mod, inst) => {\n            resolve(receiveInstance(mod, inst));\n          });\n        });\n      }\n      wasmBinaryFile ??= findWasmBinary();\n      try {\n        var result = await instantiateAsync(wasmBinary, wasmBinaryFile, info);\n        var exports = receiveInstantiationResult(result);\n        return exports;\n      } catch (e) {\n        readyPromiseReject(e);\n        return Promise.reject(e);\n      }\n    }\n    var handleException = (e) => {\n      if (e instanceof ExitStatus || e == \"unwind\") {\n        return EXITSTATUS;\n      }\n      quit_(1, e);\n    };\n    class ExitStatus {\n      name = \"ExitStatus\";\n      constructor(status) {\n        this.message = `Program terminated with exit(${status})`;\n        this.status = status;\n      }\n    }\n    var runtimeKeepaliveCounter = 0;\n    var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n    var _proc_exit = (code) => {\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        Module[\"onExit\"]?.(code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    };\n    var exitJS = (status, implicit) => {\n      EXITSTATUS = status;\n      _proc_exit(status);\n    };\n    var _exit = exitJS;\n    var maybeExit = () => {\n      if (!keepRuntimeAlive()) {\n        try {\n          _exit(EXITSTATUS);\n        } catch (e) {\n          handleException(e);\n        }\n      }\n    };\n    var callUserCallback = (func) => {\n      if (ABORT) {\n        return;\n      }\n      try {\n        func();\n        maybeExit();\n      } catch (e) {\n        handleException(e);\n      }\n    };\n    var safeSetTimeout = (func, timeout) =>\n      setTimeout(() => {\n        callUserCallback(func);\n      }, timeout);\n    var warnOnce = (text) => {\n      warnOnce.shown ||= {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        if (ENVIRONMENT_IS_NODE) text = \"warning: \" + text;\n        err(text);\n      }\n    };\n    var preloadPlugins = [];\n    var Browser = {\n      useWebGL: false,\n      isFullscreen: false,\n      pointerLock: false,\n      moduleContextCreatedCallbacks: [],\n      workers: [],\n      preloadedImages: {},\n      preloadedAudios: {},\n      getCanvas: () => Module[\"canvas\"],\n      init() {\n        if (Browser.initted) return;\n        Browser.initted = true;\n        var imagePlugin = {};\n        imagePlugin[\"canHandle\"] = function imagePlugin_canHandle(name) {\n          return (\n            !Module[\"noImageDecoding\"] &&\n            /\\.(jpg|jpeg|png|bmp|webp)$/i.test(name)\n          );\n        };\n        imagePlugin[\"handle\"] = function imagePlugin_handle(\n          byteArray,\n          name,\n          onload,\n          onerror,\n        ) {\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          if (b.size !== byteArray.length) {\n            b = new Blob([new Uint8Array(byteArray).buffer], {\n              type: Browser.getMimetype(name),\n            });\n          }\n          var url = URL.createObjectURL(b);\n          var img = new Image();\n          img.onload = () => {\n            var canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            var ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            Browser.preloadedImages[name] = canvas;\n            URL.revokeObjectURL(url);\n            onload?.(byteArray);\n          };\n          img.onerror = (event) => {\n            err(`Image ${url} could not be decoded`);\n            onerror?.();\n          };\n          img.src = url;\n        };\n        preloadPlugins.push(imagePlugin);\n        var audioPlugin = {};\n        audioPlugin[\"canHandle\"] = function audioPlugin_canHandle(name) {\n          return (\n            !Module[\"noAudioDecoding\"] &&\n            name.slice(-4) in { \".ogg\": 1, \".wav\": 1, \".mp3\": 1 }\n          );\n        };\n        audioPlugin[\"handle\"] = function audioPlugin_handle(\n          byteArray,\n          name,\n          onload,\n          onerror,\n        ) {\n          var done = false;\n          function finish(audio) {\n            if (done) return;\n            done = true;\n            Browser.preloadedAudios[name] = audio;\n            onload?.(byteArray);\n          }\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          var url = URL.createObjectURL(b);\n          var audio = new Audio();\n          audio.addEventListener(\"canplaythrough\", () => finish(audio), false);\n          audio.onerror = function audio_onerror(event) {\n            if (done) return;\n            err(\n              `warning: browser could not fully decode audio ${name}, trying slower base64 approach`,\n            );\n            function encode64(data) {\n              var BASE =\n                \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n              var PAD = \"=\";\n              var ret = \"\";\n              var leftchar = 0;\n              var leftbits = 0;\n              for (var i = 0; i < data.length; i++) {\n                leftchar = (leftchar << 8) | data[i];\n                leftbits += 8;\n                while (leftbits >= 6) {\n                  var curr = (leftchar >> (leftbits - 6)) & 63;\n                  leftbits -= 6;\n                  ret += BASE[curr];\n                }\n              }\n              if (leftbits == 2) {\n                ret += BASE[(leftchar & 3) << 4];\n                ret += PAD + PAD;\n              } else if (leftbits == 4) {\n                ret += BASE[(leftchar & 15) << 2];\n                ret += PAD;\n              }\n              return ret;\n            }\n            audio.src =\n              \"data:audio/x-\" +\n              name.slice(-3) +\n              \";base64,\" +\n              encode64(byteArray);\n            finish(audio);\n          };\n          audio.src = url;\n          safeSetTimeout(() => {\n            finish(audio);\n          }, 1e4);\n        };\n        preloadPlugins.push(audioPlugin);\n        function pointerLockChange() {\n          var canvas = Browser.getCanvas();\n          Browser.pointerLock =\n            document[\"pointerLockElement\"] === canvas ||\n            document[\"mozPointerLockElement\"] === canvas ||\n            document[\"webkitPointerLockElement\"] === canvas ||\n            document[\"msPointerLockElement\"] === canvas;\n        }\n        var canvas = Browser.getCanvas();\n        if (canvas) {\n          canvas.requestPointerLock =\n            canvas[\"requestPointerLock\"] ||\n            canvas[\"mozRequestPointerLock\"] ||\n            canvas[\"webkitRequestPointerLock\"] ||\n            canvas[\"msRequestPointerLock\"] ||\n            (() => {});\n          canvas.exitPointerLock =\n            document[\"exitPointerLock\"] ||\n            document[\"mozExitPointerLock\"] ||\n            document[\"webkitExitPointerLock\"] ||\n            document[\"msExitPointerLock\"] ||\n            (() => {});\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\n          document.addEventListener(\n            \"pointerlockchange\",\n            pointerLockChange,\n            false,\n          );\n          document.addEventListener(\n            \"mozpointerlockchange\",\n            pointerLockChange,\n            false,\n          );\n          document.addEventListener(\n            \"webkitpointerlockchange\",\n            pointerLockChange,\n            false,\n          );\n          document.addEventListener(\n            \"mspointerlockchange\",\n            pointerLockChange,\n            false,\n          );\n          if (Module[\"elementPointerLock\"]) {\n            canvas.addEventListener(\n              \"click\",\n              (ev) => {\n                if (\n                  !Browser.pointerLock &&\n                  Browser.getCanvas().requestPointerLock\n                ) {\n                  Browser.getCanvas().requestPointerLock();\n                  ev.preventDefault();\n                }\n              },\n              false,\n            );\n          }\n        }\n      },\n      createContext(canvas, useWebGL, setInModule, webGLContextAttributes) {\n        if (useWebGL && Module[\"ctx\"] && canvas == Browser.getCanvas())\n          return Module[\"ctx\"];\n        var ctx;\n        var contextHandle;\n        if (useWebGL) {\n          var contextAttributes = {\n            antialias: false,\n            alpha: false,\n            majorVersion: 1,\n          };\n          if (webGLContextAttributes) {\n            for (var attribute in webGLContextAttributes) {\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\n            }\n          }\n          if (typeof GL != \"undefined\") {\n            contextHandle = GL.createContext(canvas, contextAttributes);\n            if (contextHandle) {\n              ctx = GL.getContext(contextHandle).GLctx;\n            }\n          }\n        } else {\n          ctx = canvas.getContext(\"2d\");\n        }\n        if (!ctx) return null;\n        if (setInModule) {\n          Module[\"ctx\"] = ctx;\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\n          Browser.useWebGL = useWebGL;\n          Browser.moduleContextCreatedCallbacks.forEach((callback) =>\n            callback(),\n          );\n          Browser.init();\n        }\n        return ctx;\n      },\n      fullscreenHandlersInstalled: false,\n      lockPointer: undefined,\n      resizeCanvas: undefined,\n      requestFullscreen(lockPointer, resizeCanvas) {\n        Browser.lockPointer = lockPointer;\n        Browser.resizeCanvas = resizeCanvas;\n        if (typeof Browser.lockPointer == \"undefined\")\n          Browser.lockPointer = true;\n        if (typeof Browser.resizeCanvas == \"undefined\")\n          Browser.resizeCanvas = false;\n        var canvas = Browser.getCanvas();\n        function fullscreenChange() {\n          Browser.isFullscreen = false;\n          var canvasContainer = canvas.parentNode;\n          if (\n            (document[\"fullscreenElement\"] ||\n              document[\"mozFullScreenElement\"] ||\n              document[\"msFullscreenElement\"] ||\n              document[\"webkitFullscreenElement\"] ||\n              document[\"webkitCurrentFullScreenElement\"]) === canvasContainer\n          ) {\n            canvas.exitFullscreen = Browser.exitFullscreen;\n            if (Browser.lockPointer) canvas.requestPointerLock();\n            Browser.isFullscreen = true;\n            if (Browser.resizeCanvas) {\n              Browser.setFullscreenCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          } else {\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\n            canvasContainer.parentNode.removeChild(canvasContainer);\n            if (Browser.resizeCanvas) {\n              Browser.setWindowedCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          }\n          Module[\"onFullScreen\"]?.(Browser.isFullscreen);\n          Module[\"onFullscreen\"]?.(Browser.isFullscreen);\n        }\n        if (!Browser.fullscreenHandlersInstalled) {\n          Browser.fullscreenHandlersInstalled = true;\n          document.addEventListener(\n            \"fullscreenchange\",\n            fullscreenChange,\n            false,\n          );\n          document.addEventListener(\n            \"mozfullscreenchange\",\n            fullscreenChange,\n            false,\n          );\n          document.addEventListener(\n            \"webkitfullscreenchange\",\n            fullscreenChange,\n            false,\n          );\n          document.addEventListener(\n            \"MSFullscreenChange\",\n            fullscreenChange,\n            false,\n          );\n        }\n        var canvasContainer = document.createElement(\"div\");\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\n        canvasContainer.appendChild(canvas);\n        canvasContainer.requestFullscreen =\n          canvasContainer[\"requestFullscreen\"] ||\n          canvasContainer[\"mozRequestFullScreen\"] ||\n          canvasContainer[\"msRequestFullscreen\"] ||\n          (canvasContainer[\"webkitRequestFullscreen\"]\n            ? () =>\n                canvasContainer[\"webkitRequestFullscreen\"](\n                  Element[\"ALLOW_KEYBOARD_INPUT\"],\n                )\n            : null) ||\n          (canvasContainer[\"webkitRequestFullScreen\"]\n            ? () =>\n                canvasContainer[\"webkitRequestFullScreen\"](\n                  Element[\"ALLOW_KEYBOARD_INPUT\"],\n                )\n            : null);\n        canvasContainer.requestFullscreen();\n      },\n      exitFullscreen() {\n        if (!Browser.isFullscreen) {\n          return false;\n        }\n        var CFS =\n          document[\"exitFullscreen\"] ||\n          document[\"cancelFullScreen\"] ||\n          document[\"mozCancelFullScreen\"] ||\n          document[\"msExitFullscreen\"] ||\n          document[\"webkitCancelFullScreen\"] ||\n          (() => {});\n        CFS.apply(document, []);\n        return true;\n      },\n      safeSetTimeout(func, timeout) {\n        return safeSetTimeout(func, timeout);\n      },\n      getMimetype(name) {\n        return {\n          jpg: \"image/jpeg\",\n          jpeg: \"image/jpeg\",\n          png: \"image/png\",\n          bmp: \"image/bmp\",\n          ogg: \"audio/ogg\",\n          wav: \"audio/wav\",\n          mp3: \"audio/mpeg\",\n        }[name.slice(name.lastIndexOf(\".\") + 1)];\n      },\n      getUserMedia(func) {\n        window.getUserMedia ||=\n          navigator[\"getUserMedia\"] || navigator[\"mozGetUserMedia\"];\n        window.getUserMedia(func);\n      },\n      getMovementX(event) {\n        return (\n          event[\"movementX\"] ||\n          event[\"mozMovementX\"] ||\n          event[\"webkitMovementX\"] ||\n          0\n        );\n      },\n      getMovementY(event) {\n        return (\n          event[\"movementY\"] ||\n          event[\"mozMovementY\"] ||\n          event[\"webkitMovementY\"] ||\n          0\n        );\n      },\n      getMouseWheelDelta(event) {\n        var delta = 0;\n        switch (event.type) {\n          case \"DOMMouseScroll\":\n            delta = event.detail / 3;\n            break;\n          case \"mousewheel\":\n            delta = event.wheelDelta / 120;\n            break;\n          case \"wheel\":\n            delta = event.deltaY;\n            switch (event.deltaMode) {\n              case 0:\n                delta /= 100;\n                break;\n              case 1:\n                delta /= 3;\n                break;\n              case 2:\n                delta *= 80;\n                break;\n              default:\n                throw \"unrecognized mouse wheel delta mode: \" + event.deltaMode;\n            }\n            break;\n          default:\n            throw \"unrecognized mouse wheel event: \" + event.type;\n        }\n        return delta;\n      },\n      mouseX: 0,\n      mouseY: 0,\n      mouseMovementX: 0,\n      mouseMovementY: 0,\n      touches: {},\n      lastTouches: {},\n      calculateMouseCoords(pageX, pageY) {\n        var canvas = Browser.getCanvas();\n        var rect = canvas.getBoundingClientRect();\n        var scrollX =\n          typeof window.scrollX != \"undefined\"\n            ? window.scrollX\n            : window.pageXOffset;\n        var scrollY =\n          typeof window.scrollY != \"undefined\"\n            ? window.scrollY\n            : window.pageYOffset;\n        var adjustedX = pageX - (scrollX + rect.left);\n        var adjustedY = pageY - (scrollY + rect.top);\n        adjustedX = adjustedX * (canvas.width / rect.width);\n        adjustedY = adjustedY * (canvas.height / rect.height);\n        return { x: adjustedX, y: adjustedY };\n      },\n      setMouseCoords(pageX, pageY) {\n        const { x, y } = Browser.calculateMouseCoords(pageX, pageY);\n        Browser.mouseMovementX = x - Browser.mouseX;\n        Browser.mouseMovementY = y - Browser.mouseY;\n        Browser.mouseX = x;\n        Browser.mouseY = y;\n      },\n      calculateMouseEvent(event) {\n        if (Browser.pointerLock) {\n          if (event.type != \"mousemove\" && \"mozMovementX\" in event) {\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\n          } else {\n            Browser.mouseMovementX = Browser.getMovementX(event);\n            Browser.mouseMovementY = Browser.getMovementY(event);\n          }\n          Browser.mouseX += Browser.mouseMovementX;\n          Browser.mouseY += Browser.mouseMovementY;\n        } else {\n          if (\n            event.type === \"touchstart\" ||\n            event.type === \"touchend\" ||\n            event.type === \"touchmove\"\n          ) {\n            var touch = event.touch;\n            if (touch === undefined) {\n              return;\n            }\n            var coords = Browser.calculateMouseCoords(touch.pageX, touch.pageY);\n            if (event.type === \"touchstart\") {\n              Browser.lastTouches[touch.identifier] = coords;\n              Browser.touches[touch.identifier] = coords;\n            } else if (\n              event.type === \"touchend\" ||\n              event.type === \"touchmove\"\n            ) {\n              var last = Browser.touches[touch.identifier];\n              last ||= coords;\n              Browser.lastTouches[touch.identifier] = last;\n              Browser.touches[touch.identifier] = coords;\n            }\n            return;\n          }\n          Browser.setMouseCoords(event.pageX, event.pageY);\n        }\n      },\n      resizeListeners: [],\n      updateResizeListeners() {\n        var canvas = Browser.getCanvas();\n        Browser.resizeListeners.forEach((listener) =>\n          listener(canvas.width, canvas.height),\n        );\n      },\n      setCanvasSize(width, height, noUpdates) {\n        var canvas = Browser.getCanvas();\n        Browser.updateCanvasDimensions(canvas, width, height);\n        if (!noUpdates) Browser.updateResizeListeners();\n      },\n      windowedWidth: 0,\n      windowedHeight: 0,\n      setFullscreenCanvasSize() {\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[SDL.screen >> 2];\n          flags = flags | 8388608;\n          HEAP32[SDL.screen >> 2] = flags;\n        }\n        Browser.updateCanvasDimensions(Browser.getCanvas());\n        Browser.updateResizeListeners();\n      },\n      setWindowedCanvasSize() {\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[SDL.screen >> 2];\n          flags = flags & ~8388608;\n          HEAP32[SDL.screen >> 2] = flags;\n        }\n        Browser.updateCanvasDimensions(Browser.getCanvas());\n        Browser.updateResizeListeners();\n      },\n      updateCanvasDimensions(canvas, wNative, hNative) {\n        if (wNative && hNative) {\n          canvas.widthNative = wNative;\n          canvas.heightNative = hNative;\n        } else {\n          wNative = canvas.widthNative;\n          hNative = canvas.heightNative;\n        }\n        var w = wNative;\n        var h = hNative;\n        if (Module[\"forcedAspectRatio\"] > 0) {\n          if (w / h < Module[\"forcedAspectRatio\"]) {\n            w = Math.round(h * Module[\"forcedAspectRatio\"]);\n          } else {\n            h = Math.round(w / Module[\"forcedAspectRatio\"]);\n          }\n        }\n        if (\n          (document[\"fullscreenElement\"] ||\n            document[\"mozFullScreenElement\"] ||\n            document[\"msFullscreenElement\"] ||\n            document[\"webkitFullscreenElement\"] ||\n            document[\"webkitCurrentFullScreenElement\"]) === canvas.parentNode &&\n          typeof screen != \"undefined\"\n        ) {\n          var factor = Math.min(screen.width / w, screen.height / h);\n          w = Math.round(w * factor);\n          h = Math.round(h * factor);\n        }\n        if (Browser.resizeCanvas) {\n          if (canvas.width != w) canvas.width = w;\n          if (canvas.height != h) canvas.height = h;\n          if (typeof canvas.style != \"undefined\") {\n            canvas.style.removeProperty(\"width\");\n            canvas.style.removeProperty(\"height\");\n          }\n        } else {\n          if (canvas.width != wNative) canvas.width = wNative;\n          if (canvas.height != hNative) canvas.height = hNative;\n          if (typeof canvas.style != \"undefined\") {\n            if (w != wNative || h != hNative) {\n              canvas.style.setProperty(\"width\", w + \"px\", \"important\");\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\n            } else {\n              canvas.style.removeProperty(\"width\");\n              canvas.style.removeProperty(\"height\");\n            }\n          }\n        }\n      },\n    };\n    var callRuntimeCallbacks = (callbacks) => {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    };\n    var onPostRuns = [];\n    var addOnPostRun = (cb) => onPostRuns.push(cb);\n    var onPreRuns = [];\n    var addOnPreRun = (cb) => onPreRuns.push(cb);\n    var noExitRuntime = true;\n    class ExceptionInfo {\n      constructor(excPtr) {\n        this.excPtr = excPtr;\n        this.ptr = excPtr - 24;\n      }\n      set_type(type) {\n        HEAPU32[(this.ptr + 4) >> 2] = type;\n      }\n      get_type() {\n        return HEAPU32[(this.ptr + 4) >> 2];\n      }\n      set_destructor(destructor) {\n        HEAPU32[(this.ptr + 8) >> 2] = destructor;\n      }\n      get_destructor() {\n        return HEAPU32[(this.ptr + 8) >> 2];\n      }\n      set_caught(caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[this.ptr + 12] = caught;\n      }\n      get_caught() {\n        return HEAP8[this.ptr + 12] != 0;\n      }\n      set_rethrown(rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[this.ptr + 13] = rethrown;\n      }\n      get_rethrown() {\n        return HEAP8[this.ptr + 13] != 0;\n      }\n      init(type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n      }\n      set_adjusted_ptr(adjustedPtr) {\n        HEAPU32[(this.ptr + 16) >> 2] = adjustedPtr;\n      }\n      get_adjusted_ptr() {\n        return HEAPU32[(this.ptr + 16) >> 2];\n      }\n    }\n    var exceptionLast = 0;\n    var uncaughtExceptionCount = 0;\n    var ___cxa_throw = (ptr, type, destructor) => {\n      var info = new ExceptionInfo(ptr);\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      throw exceptionLast;\n    };\n    var syscallGetVarargI = () => {\n      var ret = HEAP32[+SYSCALLS.varargs >> 2];\n      SYSCALLS.varargs += 4;\n      return ret;\n    };\n    var syscallGetVarargP = syscallGetVarargI;\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === \"/\",\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === \".\") {\n            parts.splice(i, 1);\n          } else if (last === \"..\") {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift(\"..\");\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.slice(-1) === \"/\";\n        path = PATH.normalizeArray(\n          path.split(\"/\").filter((p) => !!p),\n          !isAbsolute,\n        ).join(\"/\");\n        if (!path && !isAbsolute) {\n          path = \".\";\n        }\n        if (path && trailingSlash) {\n          path += \"/\";\n        }\n        return (isAbsolute ? \"/\" : \"\") + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return \".\";\n        }\n        if (dir) {\n          dir = dir.slice(0, -1);\n        }\n        return root + dir;\n      },\n      basename: (path) => path && path.match(/([^\\/]+|\\/)\\/*$/)[1],\n      join: (...paths) => PATH.normalize(paths.join(\"/\")),\n      join2: (l, r) => PATH.normalize(l + \"/\" + r),\n    };\n    var initRandomFill = () => {\n      if (ENVIRONMENT_IS_NODE) {\n        var nodeCrypto = require(\"crypto\");\n        return (view) => nodeCrypto.randomFillSync(view);\n      }\n      return (view) => crypto.getRandomValues(view);\n    };\n    var randomFill = (view) => {\n      (randomFill = initRandomFill())(view);\n    };\n    var PATH_FS = {\n      resolve: (...args) => {\n        var resolvedPath = \"\",\n          resolvedAbsolute = false;\n        for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? args[i] : FS.cwd();\n          if (typeof path != \"string\") {\n            throw new TypeError(\"Arguments to path.resolve must be strings\");\n          } else if (!path) {\n            return \"\";\n          }\n          resolvedPath = path + \"/\" + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split(\"/\").filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join(\"/\");\n        return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).slice(1);\n        to = PATH_FS.resolve(to).slice(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== \"\") break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== \"\") break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split(\"/\"));\n        var toParts = trim(to.split(\"/\"));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push(\"..\");\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join(\"/\");\n      },\n    };\n    var UTF8Decoder =\n      typeof TextDecoder != \"undefined\" ? new TextDecoder() : undefined;\n    var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = \"\";\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 128)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 224) == 192) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 240) == 224) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n        if (u0 < 65536) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 65536;\n          str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n        }\n      }\n      return str;\n    };\n    var FS_stdin_getChar_buffer = [];\n    var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 127) {\n          len++;\n        } else if (c <= 2047) {\n          len += 2;\n        } else if (c >= 55296 && c <= 57343) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n    var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = (65536 + ((u & 1023) << 10)) | (u1 & 1023);\n        }\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 192 | (u >> 6);\n          heap[outIdx++] = 128 | (u & 63);\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 224 | (u >> 12);\n          heap[outIdx++] = 128 | ((u >> 6) & 63);\n          heap[outIdx++] = 128 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 240 | (u >> 18);\n          heap[outIdx++] = 128 | ((u >> 12) & 63);\n          heap[outIdx++] = 128 | ((u >> 6) & 63);\n          heap[outIdx++] = 128 | (u & 63);\n        }\n      }\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n    var intArrayFromString = (stringy, dontAddNull, length) => {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    };\n    var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (ENVIRONMENT_IS_NODE) {\n          var BUFSIZE = 256;\n          var buf = Buffer.alloc(BUFSIZE);\n          var bytesRead = 0;\n          var fd = process.stdin.fd;\n          try {\n            bytesRead = fs.readSync(fd, buf, 0, BUFSIZE);\n          } catch (e) {\n            if (e.toString().includes(\"EOF\")) bytesRead = 0;\n            else throw e;\n          }\n          if (bytesRead > 0) {\n            result = buf.slice(0, bytesRead).toString(\"utf-8\");\n          }\n        } else if (\n          typeof window != \"undefined\" &&\n          typeof window.prompt == \"function\"\n        ) {\n          result = window.prompt(\"Input: \");\n          if (result !== null) {\n            result += \"\\n\";\n          }\n        } else {\n        }\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n    var TTY = {\n      ttys: [],\n      init() {},\n      shutdown() {},\n      register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.atime = Date.now();\n          }\n          return bytesRead;\n        },\n        write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.mtime = stream.node.ctime = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char(tty) {\n          return FS_stdin_getChar();\n        },\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output?.length > 0) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n        ioctl_tcgets(tty) {\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0,\n              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            ],\n          };\n        },\n        ioctl_tcsets(tty, optional_actions, data) {\n          return 0;\n        },\n        ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n      },\n      default_tty1_ops: {\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output?.length > 0) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n      },\n    };\n    var mmapAlloc = (size) => {\n      abort();\n    };\n    var MEMFS = {\n      ops_table: null,\n      mount(mount) {\n        return MEMFS.createNode(null, \"/\", 16895, 0);\n      },\n      createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink,\n            },\n            stream: { llseek: MEMFS.stream_ops.llseek },\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync,\n            },\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink,\n            },\n            stream: {},\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: FS.chrdev_stream_ops,\n          },\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.atime = node.mtime = node.ctime = Date.now();\n        if (parent) {\n          parent.contents[name] = node;\n          parent.atime = parent.mtime = parent.ctime = node.atime;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.atime);\n          attr.mtime = new Date(node.mtime);\n          attr.ctime = new Date(node.ctime);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr(node, attr) {\n          for (const key of [\"mode\", \"atime\", \"mtime\", \"ctime\"]) {\n            if (attr[key] != null) {\n              node[key] = attr[key];\n            }\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup(parent, name) {\n          throw MEMFS.doesNotExistError;\n        },\n        mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename(old_node, new_dir, new_name) {\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {}\n          if (new_node) {\n            if (FS.isDir(old_node.mode)) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n            FS.hashRemoveNode(new_node);\n          }\n          delete old_node.parent.contents[old_node.name];\n          new_dir.contents[new_name] = old_node;\n          old_node.name = new_name;\n          new_dir.ctime =\n            new_dir.mtime =\n            old_node.parent.ctime =\n            old_node.parent.mtime =\n              Date.now();\n        },\n        unlink(parent, name) {\n          delete parent.contents[name];\n          parent.ctime = parent.mtime = Date.now();\n        },\n        rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.ctime = parent.mtime = Date.now();\n        },\n        readdir(node) {\n          return [\".\", \"..\", ...Object.keys(node.contents)];\n        },\n        symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write(stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n          if (!length) return 0;\n          var node = stream.node;\n          node.mtime = node.ctime = Date.now();\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            if (contents) {\n              if (position > 0 || position + length < contents.length) {\n                if (contents.subarray) {\n                  contents = contents.subarray(position, position + length);\n                } else {\n                  contents = Array.prototype.slice.call(\n                    contents,\n                    position,\n                    position + length,\n                  );\n                }\n              }\n              HEAP8.set(contents, ptr);\n            }\n          }\n          return { ptr, allocated };\n        },\n        msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          return 0;\n        },\n      },\n    };\n    var asyncLoad = async (url) => {\n      var arrayBuffer = await readAsync(url);\n      return new Uint8Array(arrayBuffer);\n    };\n    var FS_createDataFile = (\n      parent,\n      name,\n      fileData,\n      canRead,\n      canWrite,\n      canOwn,\n    ) => {\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n    };\n    var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      if (typeof Browser != \"undefined\") Browser.init();\n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin[\"canHandle\"](fullname)) {\n          plugin[\"handle\"](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n    var FS_createPreloadedFile = (\n      parent,\n      name,\n      url,\n      canRead,\n      canWrite,\n      onload,\n      onerror,\n      dontCreateFile,\n      canOwn,\n      preFinish,\n    ) => {\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`);\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish?.();\n          if (!dontCreateFile) {\n            FS_createDataFile(\n              parent,\n              name,\n              byteArray,\n              canRead,\n              canWrite,\n              canOwn,\n            );\n          }\n          onload?.();\n          removeRunDependency(dep);\n        }\n        if (\n          FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n            onerror?.();\n            removeRunDependency(dep);\n          })\n        ) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == \"string\") {\n        asyncLoad(url).then(processData, onerror);\n      } else {\n        processData(url);\n      }\n    };\n    var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        r: 0,\n        \"r+\": 2,\n        w: 512 | 64 | 1,\n        \"w+\": 512 | 64 | 2,\n        a: 1024 | 64 | 1,\n        \"a+\": 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == \"undefined\") {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n    var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: \"/\",\n      initialized: false,\n      ignorePermissions: true,\n      filesystems: null,\n      syncFSRequests: 0,\n      readFiles: {},\n      ErrnoError: class {\n        name = \"ErrnoError\";\n        constructor(errno) {\n          this.errno = errno;\n        }\n      },\n      FSStream: class {\n        shared = {};\n        get object() {\n          return this.node;\n        }\n        set object(val) {\n          this.node = val;\n        }\n        get isRead() {\n          return (this.flags & 2097155) !== 1;\n        }\n        get isWrite() {\n          return (this.flags & 2097155) !== 0;\n        }\n        get isAppend() {\n          return this.flags & 1024;\n        }\n        get flags() {\n          return this.shared.flags;\n        }\n        set flags(val) {\n          this.shared.flags = val;\n        }\n        get position() {\n          return this.shared.position;\n        }\n        set position(val) {\n          this.shared.position = val;\n        }\n      },\n      FSNode: class {\n        node_ops = {};\n        stream_ops = {};\n        readMode = 292 | 73;\n        writeMode = 146;\n        mounted = null;\n        constructor(parent, name, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.id = FS.nextInode++;\n          this.name = name;\n          this.mode = mode;\n          this.rdev = rdev;\n          this.atime = this.mtime = this.ctime = Date.now();\n        }\n        get read() {\n          return (this.mode & this.readMode) === this.readMode;\n        }\n        set read(val) {\n          val ? (this.mode |= this.readMode) : (this.mode &= ~this.readMode);\n        }\n        get write() {\n          return (this.mode & this.writeMode) === this.writeMode;\n        }\n        set write(val) {\n          val ? (this.mode |= this.writeMode) : (this.mode &= ~this.writeMode);\n        }\n        get isFolder() {\n          return FS.isDir(this.mode);\n        }\n        get isDevice() {\n          return FS.isChrdev(this.mode);\n        }\n      },\n      lookupPath(path, opts = {}) {\n        if (!path) {\n          throw new FS.ErrnoError(44);\n        }\n        opts.follow_mount ??= true;\n        if (!PATH.isAbs(path)) {\n          path = FS.cwd() + \"/\" + path;\n        }\n        linkloop: for (var nlinks = 0; nlinks < 40; nlinks++) {\n          var parts = path.split(\"/\").filter((p) => !!p);\n          var current = FS.root;\n          var current_path = \"/\";\n          for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n              break;\n            }\n            if (parts[i] === \".\") {\n              continue;\n            }\n            if (parts[i] === \"..\") {\n              current_path = PATH.dirname(current_path);\n              if (FS.isRoot(current)) {\n                path = current_path + \"/\" + parts.slice(i + 1).join(\"/\");\n                continue linkloop;\n              } else {\n                current = current.parent;\n              }\n              continue;\n            }\n            current_path = PATH.join2(current_path, parts[i]);\n            try {\n              current = FS.lookupNode(current, parts[i]);\n            } catch (e) {\n              if (e?.errno === 44 && islast && opts.noent_okay) {\n                return { path: current_path };\n              }\n              throw e;\n            }\n            if (FS.isMountpoint(current) && (!islast || opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n            if (FS.isLink(current.mode) && (!islast || opts.follow)) {\n              if (!current.node_ops.readlink) {\n                throw new FS.ErrnoError(52);\n              }\n              var link = current.node_ops.readlink(current);\n              if (!PATH.isAbs(link)) {\n                link = PATH.dirname(current_path) + \"/\" + link;\n              }\n              path = link + \"/\" + parts.slice(i + 1).join(\"/\");\n              continue linkloop;\n            }\n          }\n          return { path: current_path, node: current };\n        }\n        throw new FS.ErrnoError(32);\n      },\n      getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== \"/\"\n              ? `${mount}/${path}`\n              : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n      hashName(parentid, name) {\n        var hash = 0;\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        return FS.lookup(parent, name);\n      },\n      createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n        FS.hashAddNode(node);\n        return node;\n      },\n      destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot(node) {\n        return node === node.parent;\n      },\n      isMountpoint(node) {\n        return !!node.mounted;\n      },\n      isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagsToPermissionString(flag) {\n        var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n        if (flag & 512) {\n          perms += \"w\";\n        }\n        return perms;\n      },\n      nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        if (perms.includes(\"r\") && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup(dir) {\n        if (!FS.isDir(dir.mode)) return 54;\n        var errCode = FS.nodePermissions(dir, \"x\");\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate(dir, name) {\n        if (!FS.isDir(dir.mode)) {\n          return 54;\n        }\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, \"wx\");\n      },\n      mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, \"wx\");\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== \"r\" || flags & (512 | 64)) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      checkOpExists(op, err) {\n        if (!op) {\n          throw new FS.ErrnoError(err);\n        }\n        return op;\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream(stream, fd = -1) {\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n      dupStream(origStream, fd = -1) {\n        var stream = FS.createStream(origStream, fd);\n        stream.stream_ops?.dup?.(stream);\n        return stream;\n      },\n      doSetAttr(stream, node, attr) {\n        var setattr = stream?.stream_ops.setattr;\n        var arg = setattr ? stream : node;\n        setattr ??= node.node_ops.setattr;\n        FS.checkOpExists(setattr, 63);\n        setattr(arg, attr);\n      },\n      chrdev_stream_ops: {\n        open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          stream.stream_ops.open?.(stream);\n        },\n        llseek() {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 255,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n        while (check.length) {\n          var m = check.pop();\n          mounts.push(m);\n          check.push(...m.mounts);\n        }\n        return mounts;\n      },\n      syncfs(populate, callback) {\n        if (typeof populate == \"function\") {\n          callback = populate;\n          populate = false;\n        }\n        FS.syncFSRequests++;\n        if (FS.syncFSRequests > 1) {\n          err(\n            `warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`,\n          );\n        }\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount(type, opts, mountpoint) {\n        var root = mountpoint === \"/\";\n        var pseudo = !mountpoint;\n        var node;\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          mountpoint = lookup.path;\n          node = lookup.node;\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n        var mount = { type, opts, mountpoint, mounts: [] };\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n        return mountRoot;\n      },\n      unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n          while (current) {\n            var next = current.name_next;\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n            current = next;\n          }\n        });\n        node.mounted = null;\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name) {\n          throw new FS.ErrnoError(28);\n        }\n        if (name === \".\" || name === \"..\") {\n          throw new FS.ErrnoError(20);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      statfs(path) {\n        return FS.statfsNode(FS.lookupPath(path, { follow: true }).node);\n      },\n      statfsStream(stream) {\n        return FS.statfsNode(stream.node);\n      },\n      statfsNode(node) {\n        var rtn = {\n          bsize: 4096,\n          frsize: 4096,\n          blocks: 1e6,\n          bfree: 5e5,\n          bavail: 5e5,\n          files: FS.nextInode,\n          ffree: FS.nextInode - 1,\n          fsid: 42,\n          flags: 2,\n          namelen: 255,\n        };\n        if (node.node_ops.statfs) {\n          Object.assign(rtn, node.node_ops.statfs(node.mount.opts.root));\n        }\n        return rtn;\n      },\n      create(path, mode = 438) {\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir(path, mode = 511) {\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree(path, mode) {\n        var dirs = path.split(\"/\");\n        var d = \"\";\n        for (var dir of dirs) {\n          if (!dir) continue;\n          if (d || PATH.isAbs(path)) d += \"/\";\n          d += dir;\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev(path, mode, dev) {\n        if (typeof dev == \"undefined\") {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        var lookup, old_dir, new_dir;\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        var old_node = FS.lookupNode(old_dir, old_name);\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(28);\n        }\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(55);\n        }\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n        if (old_node === new_node) {\n          return;\n        }\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        FS.hashRemoveNode(old_node);\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n          old_node.parent = new_dir;\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        var readdir = FS.checkOpExists(node.node_ops.readdir, 54);\n        return readdir(node);\n      },\n      unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return link.node_ops.readlink(link);\n      },\n      stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        var getattr = FS.checkOpExists(node.node_ops.getattr, 63);\n        return getattr(node);\n      },\n      fstat(fd) {\n        var stream = FS.getStreamChecked(fd);\n        var node = stream.node;\n        var getattr = stream.stream_ops.getattr;\n        var arg = getattr ? stream : node;\n        getattr ??= node.node_ops.getattr;\n        FS.checkOpExists(getattr, 63);\n        return getattr(arg);\n      },\n      lstat(path) {\n        return FS.stat(path, true);\n      },\n      doChmod(stream, node, mode, dontFollow) {\n        FS.doSetAttr(stream, node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          ctime: Date.now(),\n          dontFollow,\n        });\n      },\n      chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        FS.doChmod(null, node, mode, dontFollow);\n      },\n      lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.doChmod(stream, stream.node, mode, false);\n      },\n      doChown(stream, node, dontFollow) {\n        FS.doSetAttr(stream, node, { timestamp: Date.now(), dontFollow });\n      },\n      chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        FS.doChown(null, node, dontFollow);\n      },\n      lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.doChown(stream, stream.node, false);\n      },\n      doTruncate(stream, node, len) {\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, \"w\");\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.doSetAttr(stream, node, { size: len, timestamp: Date.now() });\n      },\n      truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        FS.doTruncate(null, node, len);\n      },\n      ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if (len < 0 || (stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.doTruncate(stream, stream.node, len);\n      },\n      utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        var setattr = FS.checkOpExists(node.node_ops.setattr, 63);\n        setattr(node, { atime, mtime });\n      },\n      open(path, flags, mode = 438) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == \"string\" ? FS_modeStringToFlags(flags) : flags;\n        if (flags & 64) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        var isDirPath;\n        if (typeof path == \"object\") {\n          node = path;\n        } else {\n          isDirPath = path.endsWith(\"/\");\n          var lookup = FS.lookupPath(path, {\n            follow: !(flags & 131072),\n            noent_okay: true,\n          });\n          node = lookup.node;\n          path = lookup.path;\n        }\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else if (isDirPath) {\n            throw new FS.ErrnoError(31);\n          } else {\n            node = FS.mknod(path, mode | 511, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n        flags &= ~(128 | 512 | 131072);\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          ungotten: [],\n          error: false,\n        });\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (created) {\n          FS.chmod(node, mode & 511);\n        }\n        if (Module[\"logReadFiles\"] && !(flags & 1)) {\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed(stream) {\n        return stream.fd === null;\n      },\n      llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != \"undefined\";\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != \"undefined\";\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      mmap(stream, length, position, prot, flags) {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!length) {\n          throw new FS.ErrnoError(28);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || \"binary\";\n        if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === \"utf8\") {\n          ret = UTF8ArrayToString(buf);\n        } else if (opts.encoding === \"binary\") {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == \"string\") {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error(\"Unsupported data type\");\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, \"x\");\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories() {\n        FS.mkdir(\"/tmp\");\n        FS.mkdir(\"/home\");\n        FS.mkdir(\"/home/web_user\");\n      },\n      createDefaultDevices() {\n        FS.mkdir(\"/dev\");\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n          llseek: () => 0,\n        });\n        FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n        FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n        var randomBuffer = new Uint8Array(1024),\n          randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomFill(randomBuffer);\n            randomLeft = randomBuffer.byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice(\"/dev\", \"random\", randomByte);\n        FS.createDevice(\"/dev\", \"urandom\", randomByte);\n        FS.mkdir(\"/dev/shm\");\n        FS.mkdir(\"/dev/shm/tmp\");\n      },\n      createSpecialDirectories() {\n        FS.mkdir(\"/proc\");\n        var proc_self = FS.mkdir(\"/proc/self\");\n        FS.mkdir(\"/proc/self/fd\");\n        FS.mount(\n          {\n            mount() {\n              var node = FS.createNode(proc_self, \"fd\", 16895, 73);\n              node.stream_ops = { llseek: MEMFS.stream_ops.llseek };\n              node.node_ops = {\n                lookup(parent, name) {\n                  var fd = +name;\n                  var stream = FS.getStreamChecked(fd);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: \"fake\" },\n                    node_ops: { readlink: () => stream.path },\n                    id: fd + 1,\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n                readdir() {\n                  return Array.from(FS.streams.entries())\n                    .filter(([k, v]) => v)\n                    .map(([k, v]) => k.toString());\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          \"/proc/self/fd\",\n        );\n      },\n      createStandardStreams(input, output, error) {\n        if (input) {\n          FS.createDevice(\"/dev\", \"stdin\", input);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n        }\n        if (output) {\n          FS.createDevice(\"/dev\", \"stdout\", null, output);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n        }\n        if (error) {\n          FS.createDevice(\"/dev\", \"stderr\", null, error);\n        } else {\n          FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n        }\n        var stdin = FS.open(\"/dev/stdin\", 0);\n        var stdout = FS.open(\"/dev/stdout\", 1);\n        var stderr = FS.open(\"/dev/stderr\", 1);\n      },\n      staticInit() {\n        FS.nameTable = new Array(4096);\n        FS.mount(MEMFS, {}, \"/\");\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n        FS.filesystems = { MEMFS };\n      },\n      init(input, output, error) {\n        FS.initialized = true;\n        input ??= Module[\"stdin\"];\n        output ??= Module[\"stdout\"];\n        error ??= Module[\"stderr\"];\n        FS.createStandardStreams(input, output, error);\n      },\n      quit() {\n        FS.initialized = false;\n        for (var stream of FS.streams) {\n          if (stream) {\n            FS.close(stream);\n          }\n        }\n      },\n      findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath(path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === \"/\";\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n        var parts = path.split(\"/\").reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n          parent = current;\n        }\n        return current;\n      },\n      createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(\n          typeof parent == \"string\" ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == \"string\") {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n      createDevice(parent, name, input, output) {\n        var path = PATH.join2(\n          typeof parent == \"string\" ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(!!input, !!output);\n        FS.createDevice.major ??= 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            if (output?.buffer?.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.atime = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.mtime = stream.node.ctime = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != \"undefined\") {\n          throw new Error(\n            \"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\",\n          );\n        } else {\n          try {\n            obj.contents = readBinary(obj.url);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        }\n      },\n      createLazyFile(parent, name, url, canRead, canWrite) {\n        class LazyUint8Array {\n          lengthKnown = false;\n          chunks = [];\n          get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return undefined;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = (idx / this.chunkSize) | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          }\n          setDataGetter(getter) {\n            this.getter = getter;\n          }\n          cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + \". Status: \" + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader(\"Accept-Ranges\")) &&\n              header === \"bytes\";\n            var usesGzip =\n              (header = xhr.getResponseHeader(\"Content-Encoding\")) &&\n              header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing) chunkSize = datalength;\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  \"invalid range (\" +\n                    from +\n                    \", \" +\n                    to +\n                    \") or no bytes requested!\",\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  \"only \" + datalength + \" bytes available! programmer error!\",\n                );\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              xhr.responseType = \"arraybuffer\";\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + \". Status: \" + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || \"\", true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == \"undefined\") {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                \"LazyFiles on gzip forces download of the whole file when length is accessed\",\n              );\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          }\n          get length() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._length;\n          }\n          get chunkSize() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._chunkSize;\n          }\n        }\n        if (typeof XMLHttpRequest != \"undefined\") {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n          var lazyArray = new LazyUint8Array();\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url };\n        }\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = (...args) => {\n            FS.forceLoadFile(node);\n            return fn(...args);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n    };\n    var UTF8ToString = (ptr, maxBytesToRead) =>\n      ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return dir + \"/\" + path;\n      },\n      writeStat(buf, stat) {\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 4) >> 2] = stat.mode;\n        HEAPU32[(buf + 8) >> 2] = stat.nlink;\n        HEAP32[(buf + 12) >> 2] = stat.uid;\n        HEAP32[(buf + 16) >> 2] = stat.gid;\n        HEAP32[(buf + 20) >> 2] = stat.rdev;\n        HEAP64[(buf + 24) >> 3] = BigInt(stat.size);\n        HEAP32[(buf + 32) >> 2] = 4096;\n        HEAP32[(buf + 36) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        HEAP64[(buf + 40) >> 3] = BigInt(Math.floor(atime / 1e3));\n        HEAPU32[(buf + 48) >> 2] = (atime % 1e3) * 1e3 * 1e3;\n        HEAP64[(buf + 56) >> 3] = BigInt(Math.floor(mtime / 1e3));\n        HEAPU32[(buf + 64) >> 2] = (mtime % 1e3) * 1e3 * 1e3;\n        HEAP64[(buf + 72) >> 3] = BigInt(Math.floor(ctime / 1e3));\n        HEAPU32[(buf + 80) >> 2] = (ctime % 1e3) * 1e3 * 1e3;\n        HEAP64[(buf + 88) >> 3] = BigInt(stat.ino);\n        return 0;\n      },\n      writeStatFs(buf, stats) {\n        HEAP32[(buf + 4) >> 2] = stats.bsize;\n        HEAP32[(buf + 40) >> 2] = stats.bsize;\n        HEAP32[(buf + 8) >> 2] = stats.blocks;\n        HEAP32[(buf + 12) >> 2] = stats.bfree;\n        HEAP32[(buf + 16) >> 2] = stats.bavail;\n        HEAP32[(buf + 20) >> 2] = stats.files;\n        HEAP32[(buf + 24) >> 2] = stats.ffree;\n        HEAP32[(buf + 28) >> 2] = stats.fsid;\n        HEAP32[(buf + 44) >> 2] = stats.flags;\n        HEAP32[(buf + 36) >> 2] = stats.namelen;\n      },\n      doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n      varargs: undefined,\n      getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n    };\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = syscallGetVarargI();\n            if (arg < 0) {\n              return -28;\n            }\n            while (FS.streams[arg]) {\n              arg++;\n            }\n            var newStream;\n            newStream = FS.dupStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = syscallGetVarargI();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 12: {\n            var arg = syscallGetVarargP();\n            var offset = 0;\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 13:\n          case 14:\n            return 0;\n        }\n        return -28;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21505: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tcgets) {\n              var termios = stream.tty.ops.ioctl_tcgets(stream);\n              var argp = syscallGetVarargP();\n              HEAP32[argp >> 2] = termios.c_iflag || 0;\n              HEAP32[(argp + 4) >> 2] = termios.c_oflag || 0;\n              HEAP32[(argp + 8) >> 2] = termios.c_cflag || 0;\n              HEAP32[(argp + 12) >> 2] = termios.c_lflag || 0;\n              for (var i = 0; i < 32; i++) {\n                HEAP8[argp + i + 17] = termios.c_cc[i] || 0;\n              }\n              return 0;\n            }\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tcsets) {\n              var argp = syscallGetVarargP();\n              var c_iflag = HEAP32[argp >> 2];\n              var c_oflag = HEAP32[(argp + 4) >> 2];\n              var c_cflag = HEAP32[(argp + 8) >> 2];\n              var c_lflag = HEAP32[(argp + 12) >> 2];\n              var c_cc = [];\n              for (var i = 0; i < 32; i++) {\n                c_cc.push(HEAP8[argp + i + 17]);\n              }\n              return stream.tty.ops.ioctl_tcsets(stream.tty, op, {\n                c_iflag,\n                c_oflag,\n                c_cflag,\n                c_lflag,\n                c_cc,\n              });\n            }\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = syscallGetVarargP();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = syscallGetVarargP();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            if (stream.tty.ops.ioctl_tiocgwinsz) {\n              var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n              var argp = syscallGetVarargP();\n              HEAP16[argp >> 1] = winsize[0];\n              HEAP16[(argp + 2) >> 1] = winsize[1];\n            }\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21515: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? syscallGetVarargI() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    var __abort_js = () => abort(\"\");\n    var tupleRegistrations = {};\n    var runDestructors = (destructors) => {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    };\n    function readPointer(pointer) {\n      return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n    }\n    var awaitingDependencies = {};\n    var registeredTypes = {};\n    var typeDependencies = {};\n    var InternalError = (Module[\"InternalError\"] = class InternalError extends (\n      Error\n    ) {\n      constructor(message) {\n        super(message);\n        this.name = \"InternalError\";\n      }\n    });\n    var throwInternalError = (message) => {\n      throw new InternalError(message);\n    };\n    var whenDependentTypesAreResolved = (\n      myTypes,\n      dependentTypes,\n      getTypeConverters,\n    ) => {\n      myTypes.forEach((type) => (typeDependencies[type] = dependentTypes));\n      function onComplete(typeConverters) {\n        var myTypeConverters = getTypeConverters(typeConverters);\n        if (myTypeConverters.length !== myTypes.length) {\n          throwInternalError(\"Mismatched type converter count\");\n        }\n        for (var i = 0; i < myTypes.length; ++i) {\n          registerType(myTypes[i], myTypeConverters[i]);\n        }\n      }\n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(() => {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    };\n    var __embind_finalize_value_array = (rawTupleType) => {\n      var reg = tupleRegistrations[rawTupleType];\n      delete tupleRegistrations[rawTupleType];\n      var elements = reg.elements;\n      var elementsLength = elements.length;\n      var elementTypes = elements\n        .map((elt) => elt.getterReturnType)\n        .concat(elements.map((elt) => elt.setterArgumentType));\n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      whenDependentTypesAreResolved(\n        [rawTupleType],\n        elementTypes,\n        (elementTypes) => {\n          elements.forEach((elt, i) => {\n            var getterReturnType = elementTypes[i];\n            var getter = elt.getter;\n            var getterContext = elt.getterContext;\n            var setterArgumentType = elementTypes[i + elementsLength];\n            var setter = elt.setter;\n            var setterContext = elt.setterContext;\n            elt.read = (ptr) =>\n              getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n            elt.write = (ptr, o) => {\n              var destructors = [];\n              setter(\n                setterContext,\n                ptr,\n                setterArgumentType[\"toWireType\"](destructors, o),\n              );\n              runDestructors(destructors);\n            };\n          });\n          return [\n            {\n              name: reg.name,\n              fromWireType: (ptr) => {\n                var rv = new Array(elementsLength);\n                for (var i = 0; i < elementsLength; ++i) {\n                  rv[i] = elements[i].read(ptr);\n                }\n                rawDestructor(ptr);\n                return rv;\n              },\n              toWireType: (destructors, o) => {\n                if (elementsLength !== o.length) {\n                  throw new TypeError(\n                    `Incorrect number of tuple elements for ${reg.name}: expected=${elementsLength}, actual=${o.length}`,\n                  );\n                }\n                var ptr = rawConstructor();\n                for (var i = 0; i < elementsLength; ++i) {\n                  elements[i].write(ptr, o[i]);\n                }\n                if (destructors !== null) {\n                  destructors.push(rawDestructor, ptr);\n                }\n                return ptr;\n              },\n              argPackAdvance: GenericWireTypeSize,\n              readValueFromPointer: readPointer,\n              destructorFunction: rawDestructor,\n            },\n          ];\n        },\n      );\n    };\n    var structRegistrations = {};\n    var __embind_finalize_value_object = (structType) => {\n      var reg = structRegistrations[structType];\n      delete structRegistrations[structType];\n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      var fieldRecords = reg.fields;\n      var fieldTypes = fieldRecords\n        .map((field) => field.getterReturnType)\n        .concat(fieldRecords.map((field) => field.setterArgumentType));\n      whenDependentTypesAreResolved([structType], fieldTypes, (fieldTypes) => {\n        var fields = {};\n        fieldRecords.forEach((field, i) => {\n          var fieldName = field.fieldName;\n          var getterReturnType = fieldTypes[i];\n          var optional = fieldTypes[i].optional;\n          var getter = field.getter;\n          var getterContext = field.getterContext;\n          var setterArgumentType = fieldTypes[i + fieldRecords.length];\n          var setter = field.setter;\n          var setterContext = field.setterContext;\n          fields[fieldName] = {\n            read: (ptr) =>\n              getterReturnType[\"fromWireType\"](getter(getterContext, ptr)),\n            write: (ptr, o) => {\n              var destructors = [];\n              setter(\n                setterContext,\n                ptr,\n                setterArgumentType[\"toWireType\"](destructors, o),\n              );\n              runDestructors(destructors);\n            },\n            optional,\n          };\n        });\n        return [\n          {\n            name: reg.name,\n            fromWireType: (ptr) => {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            },\n            toWireType: (destructors, o) => {\n              for (var fieldName in fields) {\n                if (!(fieldName in o) && !fields[fieldName].optional) {\n                  throw new TypeError(`Missing field: \"${fieldName}\"`);\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            },\n            argPackAdvance: GenericWireTypeSize,\n            readValueFromPointer: readPointer,\n            destructorFunction: rawDestructor,\n          },\n        ];\n      });\n    };\n    var embindRepr = (v) => {\n      if (v === null) {\n        return \"null\";\n      }\n      var t = typeof v;\n      if (t === \"object\" || t === \"array\" || t === \"function\") {\n        return v.toString();\n      } else {\n        return \"\" + v;\n      }\n    };\n    var embind_init_charCodes = () => {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n        codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    };\n    var embind_charCodes;\n    var readLatin1String = (ptr) => {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n        ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    };\n    var BindingError = (Module[\"BindingError\"] = class BindingError extends (\n      Error\n    ) {\n      constructor(message) {\n        super(message);\n        this.name = \"BindingError\";\n      }\n    });\n    var throwBindingError = (message) => {\n      throw new BindingError(message);\n    };\n    function sharedRegisterType(rawType, registeredInstance, options = {}) {\n      var name = registeredInstance.name;\n      if (!rawType) {\n        throwBindingError(\n          `type \"${name}\" must have a positive integer typeid pointer`,\n        );\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n          return;\n        } else {\n          throwBindingError(`Cannot register type '${name}' twice`);\n        }\n      }\n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach((cb) => cb());\n      }\n    }\n    function registerType(rawType, registeredInstance, options = {}) {\n      return sharedRegisterType(rawType, registeredInstance, options);\n    }\n    var integerReadValueFromPointer = (name, width, signed) => {\n      switch (width) {\n        case 1:\n          return signed\n            ? (pointer) => HEAP8[pointer]\n            : (pointer) => HEAPU8[pointer];\n        case 2:\n          return signed\n            ? (pointer) => HEAP16[pointer >> 1]\n            : (pointer) => HEAPU16[pointer >> 1];\n        case 4:\n          return signed\n            ? (pointer) => HEAP32[pointer >> 2]\n            : (pointer) => HEAPU32[pointer >> 2];\n        case 8:\n          return signed\n            ? (pointer) => HEAP64[pointer >> 3]\n            : (pointer) => HEAPU64[pointer >> 3];\n        default:\n          throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n    var __embind_register_bigint = (\n      primitiveType,\n      name,\n      size,\n      minRange,\n      maxRange,\n    ) => {\n      name = readLatin1String(name);\n      var isUnsignedType = name.indexOf(\"u\") != -1;\n      if (isUnsignedType) {\n        maxRange = (1n << 64n) - 1n;\n      }\n      registerType(primitiveType, {\n        name,\n        fromWireType: (value) => value,\n        toWireType: function (destructors, value) {\n          if (typeof value != \"bigint\" && typeof value != \"number\") {\n            throw new TypeError(\n              `Cannot convert \"${embindRepr(value)}\" to ${this.name}`,\n            );\n          }\n          if (typeof value == \"number\") {\n            value = BigInt(value);\n          }\n          return value;\n        },\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: integerReadValueFromPointer(\n          name,\n          size,\n          !isUnsignedType,\n        ),\n        destructorFunction: null,\n      });\n    };\n    var GenericWireTypeSize = 8;\n    var __embind_register_bool = (rawType, name, trueValue, falseValue) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name,\n        fromWireType: function (wt) {\n          return !!wt;\n        },\n        toWireType: function (destructors, o) {\n          return o ? trueValue : falseValue;\n        },\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: function (pointer) {\n          return this[\"fromWireType\"](HEAPU8[pointer]);\n        },\n        destructorFunction: null,\n      });\n    };\n    var shallowCopyInternalPointer = (o) => ({\n      count: o.count,\n      deleteScheduled: o.deleteScheduled,\n      preservePointerOnDelete: o.preservePointerOnDelete,\n      ptr: o.ptr,\n      ptrType: o.ptrType,\n      smartPtr: o.smartPtr,\n      smartPtrType: o.smartPtrType,\n    });\n    var throwInstanceAlreadyDeleted = (obj) => {\n      function getInstanceTypeName(handle) {\n        return handle.$$.ptrType.registeredClass.name;\n      }\n      throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n    };\n    var finalizationRegistry = false;\n    var detachFinalizer = (handle) => {};\n    var runDestructor = ($$) => {\n      if ($$.smartPtr) {\n        $$.smartPtrType.rawDestructor($$.smartPtr);\n      } else {\n        $$.ptrType.registeredClass.rawDestructor($$.ptr);\n      }\n    };\n    var releaseClassHandle = ($$) => {\n      $$.count.value -= 1;\n      var toDelete = 0 === $$.count.value;\n      if (toDelete) {\n        runDestructor($$);\n      }\n    };\n    var attachFinalizer = (handle) => {\n      if (\"undefined\" === typeof FinalizationRegistry) {\n        attachFinalizer = (handle) => handle;\n        return handle;\n      }\n      finalizationRegistry = new FinalizationRegistry((info) => {\n        releaseClassHandle(info.$$);\n      });\n      attachFinalizer = (handle) => {\n        var $$ = handle.$$;\n        var hasSmartPtr = !!$$.smartPtr;\n        if (hasSmartPtr) {\n          var info = { $$ };\n          finalizationRegistry.register(handle, info, handle);\n        }\n        return handle;\n      };\n      detachFinalizer = (handle) => finalizationRegistry.unregister(handle);\n      return attachFinalizer(handle);\n    };\n    var deletionQueue = [];\n    var flushPendingDeletes = () => {\n      while (deletionQueue.length) {\n        var obj = deletionQueue.pop();\n        obj.$$.deleteScheduled = false;\n        obj[\"delete\"]();\n      }\n    };\n    var delayFunction;\n    var init_ClassHandle = () => {\n      let proto = ClassHandle.prototype;\n      Object.assign(proto, {\n        isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          other.$$ = other.$$;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        },\n        clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(\n              Object.create(Object.getPrototypeOf(this), {\n                $$: { value: shallowCopyInternalPointer(this.$$) },\n              }),\n            );\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        },\n        delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = undefined;\n            this.$$.ptr = undefined;\n          }\n        },\n        isDeleted() {\n          return !this.$$.ptr;\n        },\n        deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        },\n      });\n      const symbolDispose = Symbol.dispose;\n      if (symbolDispose) {\n        proto[symbolDispose] = proto[\"delete\"];\n      }\n    };\n    function ClassHandle() {}\n    var createNamedFunction = (name, func) =>\n      Object.defineProperty(func, \"name\", { value: name });\n    var registeredPointers = {};\n    var ensureOverloadTable = (proto, methodName, humanName) => {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        proto[methodName] = function (...args) {\n          if (!proto[methodName].overloadTable.hasOwnProperty(args.length)) {\n            throwBindingError(\n              `Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`,\n            );\n          }\n          return proto[methodName].overloadTable[args.length].apply(this, args);\n        };\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    };\n    var exposePublicSymbol = (name, value, numArguments) => {\n      if (Module.hasOwnProperty(name)) {\n        if (\n          undefined === numArguments ||\n          (undefined !== Module[name].overloadTable &&\n            undefined !== Module[name].overloadTable[numArguments])\n        ) {\n          throwBindingError(`Cannot register public name '${name}' twice`);\n        }\n        ensureOverloadTable(Module, name, name);\n        if (Module[name].overloadTable.hasOwnProperty(numArguments)) {\n          throwBindingError(\n            `Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`,\n          );\n        }\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    };\n    var char_0 = 48;\n    var char_9 = 57;\n    var makeLegalFunctionName = (name) => {\n      name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return `_${name}`;\n      }\n      return name;\n    };\n    function RegisteredClass(\n      name,\n      constructor,\n      instancePrototype,\n      rawDestructor,\n      baseClass,\n      getActualType,\n      upcast,\n      downcast,\n    ) {\n      this.name = name;\n      this.constructor = constructor;\n      this.instancePrototype = instancePrototype;\n      this.rawDestructor = rawDestructor;\n      this.baseClass = baseClass;\n      this.getActualType = getActualType;\n      this.upcast = upcast;\n      this.downcast = downcast;\n      this.pureVirtualFunctions = [];\n    }\n    var upcastPointer = (ptr, ptrClass, desiredClass) => {\n      while (ptrClass !== desiredClass) {\n        if (!ptrClass.upcast) {\n          throwBindingError(\n            `Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`,\n          );\n        }\n        ptr = ptrClass.upcast(ptr);\n        ptrClass = ptrClass.baseClass;\n      }\n      return ptr;\n    };\n    function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        return 0;\n      }\n      if (!handle.$$) {\n        throwBindingError(\n          `Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`,\n        );\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(\n          `Cannot pass deleted object as a pointer of type ${this.name}`,\n        );\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n    function genericPointerToWireType(destructors, handle) {\n      var ptr;\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        if (this.isSmartPointer) {\n          ptr = this.rawConstructor();\n          if (destructors !== null) {\n            destructors.push(this.rawDestructor, ptr);\n          }\n          return ptr;\n        } else {\n          return 0;\n        }\n      }\n      if (!handle || !handle.$$) {\n        throwBindingError(\n          `Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`,\n        );\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(\n          `Cannot pass deleted object as a pointer of type ${this.name}`,\n        );\n      }\n      if (!this.isConst && handle.$$.ptrType.isConst) {\n        throwBindingError(\n          `Cannot convert argument of type ${handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name} to parameter type ${this.name}`,\n        );\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      if (this.isSmartPointer) {\n        if (undefined === handle.$$.smartPtr) {\n          throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n        }\n        switch (this.sharingPolicy) {\n          case 0:\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              throwBindingError(\n                `Cannot convert argument of type ${handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name} to parameter type ${this.name}`,\n              );\n            }\n            break;\n          case 1:\n            ptr = handle.$$.smartPtr;\n            break;\n          case 2:\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              var clonedHandle = handle[\"clone\"]();\n              ptr = this.rawShare(\n                ptr,\n                Emval.toHandle(() => clonedHandle[\"delete\"]()),\n              );\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n            }\n            break;\n          default:\n            throwBindingError(\"Unsupporting sharing policy\");\n        }\n      }\n      return ptr;\n    }\n    function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        return 0;\n      }\n      if (!handle.$$) {\n        throwBindingError(\n          `Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`,\n        );\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(\n          `Cannot pass deleted object as a pointer of type ${this.name}`,\n        );\n      }\n      if (handle.$$.ptrType.isConst) {\n        throwBindingError(\n          `Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`,\n        );\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n    var downcastPointer = (ptr, ptrClass, desiredClass) => {\n      if (ptrClass === desiredClass) {\n        return ptr;\n      }\n      if (undefined === desiredClass.baseClass) {\n        return null;\n      }\n      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n      if (rv === null) {\n        return null;\n      }\n      return desiredClass.downcast(rv);\n    };\n    var registeredInstances = {};\n    var getBasestPointer = (class_, ptr) => {\n      if (ptr === undefined) {\n        throwBindingError(\"ptr should not be undefined\");\n      }\n      while (class_.baseClass) {\n        ptr = class_.upcast(ptr);\n        class_ = class_.baseClass;\n      }\n      return ptr;\n    };\n    var getInheritedInstance = (class_, ptr) => {\n      ptr = getBasestPointer(class_, ptr);\n      return registeredInstances[ptr];\n    };\n    var makeClassHandle = (prototype, record) => {\n      if (!record.ptrType || !record.ptr) {\n        throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n      }\n      var hasSmartPtrType = !!record.smartPtrType;\n      var hasSmartPtr = !!record.smartPtr;\n      if (hasSmartPtrType !== hasSmartPtr) {\n        throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n      }\n      record.count = { value: 1 };\n      return attachFinalizer(\n        Object.create(prototype, { $$: { value: record, writable: true } }),\n      );\n    };\n    function RegisteredPointer_fromWireType(ptr) {\n      var rawPointer = this.getPointee(ptr);\n      if (!rawPointer) {\n        this.destructor(ptr);\n        return null;\n      }\n      var registeredInstance = getInheritedInstance(\n        this.registeredClass,\n        rawPointer,\n      );\n      if (undefined !== registeredInstance) {\n        if (0 === registeredInstance.$$.count.value) {\n          registeredInstance.$$.ptr = rawPointer;\n          registeredInstance.$$.smartPtr = ptr;\n          return registeredInstance[\"clone\"]();\n        } else {\n          var rv = registeredInstance[\"clone\"]();\n          this.destructor(ptr);\n          return rv;\n        }\n      }\n      function makeDefaultHandle() {\n        if (this.isSmartPointer) {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this.pointeeType,\n            ptr: rawPointer,\n            smartPtrType: this,\n            smartPtr: ptr,\n          });\n        } else {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this,\n            ptr,\n          });\n        }\n      }\n      var actualType = this.registeredClass.getActualType(rawPointer);\n      var registeredPointerRecord = registeredPointers[actualType];\n      if (!registeredPointerRecord) {\n        return makeDefaultHandle.call(this);\n      }\n      var toType;\n      if (this.isConst) {\n        toType = registeredPointerRecord.constPointerType;\n      } else {\n        toType = registeredPointerRecord.pointerType;\n      }\n      var dp = downcastPointer(\n        rawPointer,\n        this.registeredClass,\n        toType.registeredClass,\n      );\n      if (dp === null) {\n        return makeDefaultHandle.call(this);\n      }\n      if (this.isSmartPointer) {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n          smartPtrType: this,\n          smartPtr: ptr,\n        });\n      } else {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n        });\n      }\n    }\n    var init_RegisteredPointer = () => {\n      Object.assign(RegisteredPointer.prototype, {\n        getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        },\n        destructor(ptr) {\n          this.rawDestructor?.(ptr);\n        },\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: readPointer,\n        fromWireType: RegisteredPointer_fromWireType,\n      });\n    };\n    function RegisteredPointer(\n      name,\n      registeredClass,\n      isReference,\n      isConst,\n      isSmartPointer,\n      pointeeType,\n      sharingPolicy,\n      rawGetPointee,\n      rawConstructor,\n      rawShare,\n      rawDestructor,\n    ) {\n      this.name = name;\n      this.registeredClass = registeredClass;\n      this.isReference = isReference;\n      this.isConst = isConst;\n      this.isSmartPointer = isSmartPointer;\n      this.pointeeType = pointeeType;\n      this.sharingPolicy = sharingPolicy;\n      this.rawGetPointee = rawGetPointee;\n      this.rawConstructor = rawConstructor;\n      this.rawShare = rawShare;\n      this.rawDestructor = rawDestructor;\n      if (!isSmartPointer && registeredClass.baseClass === undefined) {\n        if (isConst) {\n          this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        } else {\n          this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        }\n      } else {\n        this[\"toWireType\"] = genericPointerToWireType;\n      }\n    }\n    var replacePublicSymbol = (name, value, numArguments) => {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError(\"Replacing nonexistent public symbol\");\n      }\n      if (\n        undefined !== Module[name].overloadTable &&\n        undefined !== numArguments\n      ) {\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    };\n    var wasmTableMirror = [];\n    var wasmTable;\n    var getWasmTableEntry = (funcPtr) => {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      return func;\n    };\n    var embind__requireFunction = (signature, rawFunction, isAsync = false) => {\n      signature = readLatin1String(signature);\n      function makeDynCaller() {\n        var rtn = getWasmTableEntry(rawFunction);\n        return rtn;\n      }\n      var fp = makeDynCaller();\n      if (typeof fp != \"function\") {\n        throwBindingError(\n          `unknown function pointer with signature ${signature}: ${rawFunction}`,\n        );\n      }\n      return fp;\n    };\n    class UnboundTypeError extends Error {}\n    var getTypeName = (type) => {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    };\n    var throwUnboundTypeError = (message, types) => {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n      throw new UnboundTypeError(\n        `${message}: ` + unboundTypes.map(getTypeName).join([\", \"]),\n      );\n    };\n    var __embind_register_class = (\n      rawType,\n      rawPointerType,\n      rawConstPointerType,\n      baseClassRawType,\n      getActualTypeSignature,\n      getActualType,\n      upcastSignature,\n      upcast,\n      downcastSignature,\n      downcast,\n      name,\n      destructorSignature,\n      rawDestructor,\n    ) => {\n      name = readLatin1String(name);\n      getActualType = embind__requireFunction(\n        getActualTypeSignature,\n        getActualType,\n      );\n      upcast &&= embind__requireFunction(upcastSignature, upcast);\n      downcast &&= embind__requireFunction(downcastSignature, downcast);\n      rawDestructor = embind__requireFunction(\n        destructorSignature,\n        rawDestructor,\n      );\n      var legalFunctionName = makeLegalFunctionName(name);\n      exposePublicSymbol(legalFunctionName, function () {\n        throwUnboundTypeError(`Cannot construct ${name} due to unbound types`, [\n          baseClassRawType,\n        ]);\n      });\n      whenDependentTypesAreResolved(\n        [rawType, rawPointerType, rawConstPointerType],\n        baseClassRawType ? [baseClassRawType] : [],\n        (base) => {\n          base = base[0];\n          var baseClass;\n          var basePrototype;\n          if (baseClassRawType) {\n            baseClass = base.registeredClass;\n            basePrototype = baseClass.instancePrototype;\n          } else {\n            basePrototype = ClassHandle.prototype;\n          }\n          var constructor = createNamedFunction(name, function (...args) {\n            if (Object.getPrototypeOf(this) !== instancePrototype) {\n              throw new BindingError(`Use 'new' to construct ${name}`);\n            }\n            if (undefined === registeredClass.constructor_body) {\n              throw new BindingError(`${name} has no accessible constructor`);\n            }\n            var body = registeredClass.constructor_body[args.length];\n            if (undefined === body) {\n              throw new BindingError(\n                `Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`,\n              );\n            }\n            return body.apply(this, args);\n          });\n          var instancePrototype = Object.create(basePrototype, {\n            constructor: { value: constructor },\n          });\n          constructor.prototype = instancePrototype;\n          var registeredClass = new RegisteredClass(\n            name,\n            constructor,\n            instancePrototype,\n            rawDestructor,\n            baseClass,\n            getActualType,\n            upcast,\n            downcast,\n          );\n          if (registeredClass.baseClass) {\n            registeredClass.baseClass.__derivedClasses ??= [];\n            registeredClass.baseClass.__derivedClasses.push(registeredClass);\n          }\n          var referenceConverter = new RegisteredPointer(\n            name,\n            registeredClass,\n            true,\n            false,\n            false,\n          );\n          var pointerConverter = new RegisteredPointer(\n            name + \"*\",\n            registeredClass,\n            false,\n            false,\n            false,\n          );\n          var constPointerConverter = new RegisteredPointer(\n            name + \" const*\",\n            registeredClass,\n            false,\n            true,\n            false,\n          );\n          registeredPointers[rawType] = {\n            pointerType: pointerConverter,\n            constPointerType: constPointerConverter,\n          };\n          replacePublicSymbol(legalFunctionName, constructor);\n          return [referenceConverter, pointerConverter, constPointerConverter];\n        },\n      );\n    };\n    function usesDestructorStack(argTypes) {\n      for (var i = 1; i < argTypes.length; ++i) {\n        if (\n          argTypes[i] !== null &&\n          argTypes[i].destructorFunction === undefined\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n    function createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync) {\n      var needsDestructorStack = usesDestructorStack(argTypes);\n      var argCount = argTypes.length - 2;\n      var argsList = [];\n      var argsListWired = [\"fn\"];\n      if (isClassMethodFunc) {\n        argsListWired.push(\"thisWired\");\n      }\n      for (var i = 0; i < argCount; ++i) {\n        argsList.push(`arg${i}`);\n        argsListWired.push(`arg${i}Wired`);\n      }\n      argsList = argsList.join(\",\");\n      argsListWired = argsListWired.join(\",\");\n      var invokerFnBody = `return function (${argsList}) {\\n`;\n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\n        \"humanName\",\n        \"throwBindingError\",\n        \"invoker\",\n        \"fn\",\n        \"runDestructors\",\n        \"retType\",\n        \"classParam\",\n      ];\n      if (isClassMethodFunc) {\n        invokerFnBody += `var thisWired = classParam['toWireType'](${dtorStack}, this);\\n`;\n      }\n      for (var i = 0; i < argCount; ++i) {\n        invokerFnBody += `var arg${i}Wired = argType${i}['toWireType'](${dtorStack}, arg${i});\\n`;\n        args1.push(`argType${i}`);\n      }\n      invokerFnBody +=\n        (returns || isAsync ? \"var rv = \" : \"\") +\n        `invoker(${argsListWired});\\n`;\n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n          var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += `${paramName}_dtor(${paramName});\\n`;\n            args1.push(`${paramName}_dtor`);\n          }\n        }\n      }\n      if (returns) {\n        invokerFnBody +=\n          \"var ret = retType['fromWireType'](rv);\\n\" + \"return ret;\\n\";\n      } else {\n      }\n      invokerFnBody += \"}\\n\";\n      return [args1, invokerFnBody];\n    }\n    function craftInvokerFunction(\n      humanName,\n      argTypes,\n      classType,\n      cppInvokerFunc,\n      cppTargetFunc,\n      isAsync,\n    ) {\n      var argCount = argTypes.length;\n      if (argCount < 2) {\n        throwBindingError(\n          \"argTypes array size mismatch! Must at least get return value and 'this' types!\",\n        );\n      }\n      var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n      var needsDestructorStack = usesDestructorStack(argTypes);\n      var returns = argTypes[0].name !== \"void\";\n      var closureArgs = [\n        humanName,\n        throwBindingError,\n        cppInvokerFunc,\n        cppTargetFunc,\n        runDestructors,\n        argTypes[0],\n        argTypes[1],\n      ];\n      for (var i = 0; i < argCount - 2; ++i) {\n        closureArgs.push(argTypes[i + 2]);\n      }\n      if (!needsDestructorStack) {\n        for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n          if (argTypes[i].destructorFunction !== null) {\n            closureArgs.push(argTypes[i].destructorFunction);\n          }\n        }\n      }\n      let [args, invokerFnBody] = createJsInvoker(\n        argTypes,\n        isClassMethodFunc,\n        returns,\n        isAsync,\n      );\n      var invokerFn = new Function(...args, invokerFnBody)(...closureArgs);\n      return createNamedFunction(humanName, invokerFn);\n    }\n    var heap32VectorToArray = (count, firstElement) => {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n        array.push(HEAPU32[(firstElement + i * 4) >> 2]);\n      }\n      return array;\n    };\n    var getFunctionName = (signature) => {\n      signature = signature.trim();\n      const argsIndex = signature.indexOf(\"(\");\n      if (argsIndex === -1) return signature;\n      return signature.slice(0, argsIndex);\n    };\n    var __embind_register_class_class_function = (\n      rawClassType,\n      methodName,\n      argCount,\n      rawArgTypesAddr,\n      invokerSignature,\n      rawInvoker,\n      fn,\n      isAsync,\n      isNonnullReturn,\n    ) => {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      methodName = readLatin1String(methodName);\n      methodName = getFunctionName(methodName);\n      rawInvoker = embind__requireFunction(\n        invokerSignature,\n        rawInvoker,\n        isAsync,\n      );\n      whenDependentTypesAreResolved([], [rawClassType], (classType) => {\n        classType = classType[0];\n        var humanName = `${classType.name}.${methodName}`;\n        function unboundTypesHandler() {\n          throwUnboundTypeError(\n            `Cannot call ${humanName} due to unbound types`,\n            rawArgTypes,\n          );\n        }\n        if (methodName.startsWith(\"@@\")) {\n          methodName = Symbol[methodName.substring(2)];\n        }\n        var proto = classType.registeredClass.constructor;\n        if (undefined === proto[methodName]) {\n          unboundTypesHandler.argCount = argCount - 1;\n          proto[methodName] = unboundTypesHandler;\n        } else {\n          ensureOverloadTable(proto, methodName, humanName);\n          proto[methodName].overloadTable[argCount - 1] = unboundTypesHandler;\n        }\n        whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\n          var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\n          var func = craftInvokerFunction(\n            humanName,\n            invokerArgsArray,\n            null,\n            rawInvoker,\n            fn,\n            isAsync,\n          );\n          if (undefined === proto[methodName].overloadTable) {\n            func.argCount = argCount - 1;\n            proto[methodName] = func;\n          } else {\n            proto[methodName].overloadTable[argCount - 1] = func;\n          }\n          if (classType.registeredClass.__derivedClasses) {\n            for (const derivedClass of classType.registeredClass\n              .__derivedClasses) {\n              if (!derivedClass.constructor.hasOwnProperty(methodName)) {\n                derivedClass.constructor[methodName] = func;\n              }\n            }\n          }\n          return [];\n        });\n        return [];\n      });\n    };\n    var __embind_register_class_constructor = (\n      rawClassType,\n      argCount,\n      rawArgTypesAddr,\n      invokerSignature,\n      invoker,\n      rawConstructor,\n    ) => {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      invoker = embind__requireFunction(invokerSignature, invoker);\n      whenDependentTypesAreResolved([], [rawClassType], (classType) => {\n        classType = classType[0];\n        var humanName = `constructor ${classType.name}`;\n        if (undefined === classType.registeredClass.constructor_body) {\n          classType.registeredClass.constructor_body = [];\n        }\n        if (\n          undefined !== classType.registeredClass.constructor_body[argCount - 1]\n        ) {\n          throw new BindingError(\n            `Cannot register multiple constructors with identical number of parameters (${argCount - 1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`,\n          );\n        }\n        classType.registeredClass.constructor_body[argCount - 1] = () => {\n          throwUnboundTypeError(\n            `Cannot construct ${classType.name} due to unbound types`,\n            rawArgTypes,\n          );\n        };\n        whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\n          argTypes.splice(1, 0, null);\n          classType.registeredClass.constructor_body[argCount - 1] =\n            craftInvokerFunction(\n              humanName,\n              argTypes,\n              null,\n              invoker,\n              rawConstructor,\n            );\n          return [];\n        });\n        return [];\n      });\n    };\n    var __embind_register_class_function = (\n      rawClassType,\n      methodName,\n      argCount,\n      rawArgTypesAddr,\n      invokerSignature,\n      rawInvoker,\n      context,\n      isPureVirtual,\n      isAsync,\n      isNonnullReturn,\n    ) => {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      methodName = readLatin1String(methodName);\n      methodName = getFunctionName(methodName);\n      rawInvoker = embind__requireFunction(\n        invokerSignature,\n        rawInvoker,\n        isAsync,\n      );\n      whenDependentTypesAreResolved([], [rawClassType], (classType) => {\n        classType = classType[0];\n        var humanName = `${classType.name}.${methodName}`;\n        if (methodName.startsWith(\"@@\")) {\n          methodName = Symbol[methodName.substring(2)];\n        }\n        if (isPureVirtual) {\n          classType.registeredClass.pureVirtualFunctions.push(methodName);\n        }\n        function unboundTypesHandler() {\n          throwUnboundTypeError(\n            `Cannot call ${humanName} due to unbound types`,\n            rawArgTypes,\n          );\n        }\n        var proto = classType.registeredClass.instancePrototype;\n        var method = proto[methodName];\n        if (\n          undefined === method ||\n          (undefined === method.overloadTable &&\n            method.className !== classType.name &&\n            method.argCount === argCount - 2)\n        ) {\n          unboundTypesHandler.argCount = argCount - 2;\n          unboundTypesHandler.className = classType.name;\n          proto[methodName] = unboundTypesHandler;\n        } else {\n          ensureOverloadTable(proto, methodName, humanName);\n          proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n        }\n        whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\n          var memberFunction = craftInvokerFunction(\n            humanName,\n            argTypes,\n            classType,\n            rawInvoker,\n            context,\n            isAsync,\n          );\n          if (undefined === proto[methodName].overloadTable) {\n            memberFunction.argCount = argCount - 2;\n            proto[methodName] = memberFunction;\n          } else {\n            proto[methodName].overloadTable[argCount - 2] = memberFunction;\n          }\n          return [];\n        });\n        return [];\n      });\n    };\n    var validateThis = (this_, classType, humanName) => {\n      if (!(this_ instanceof Object)) {\n        throwBindingError(`${humanName} with invalid \"this\": ${this_}`);\n      }\n      if (!(this_ instanceof classType.registeredClass.constructor)) {\n        throwBindingError(\n          `${humanName} incompatible with \"this\" of type ${this_.constructor.name}`,\n        );\n      }\n      if (!this_.$$.ptr) {\n        throwBindingError(\n          `cannot call emscripten binding method ${humanName} on deleted object`,\n        );\n      }\n      return upcastPointer(\n        this_.$$.ptr,\n        this_.$$.ptrType.registeredClass,\n        classType.registeredClass,\n      );\n    };\n    var __embind_register_class_property = (\n      classType,\n      fieldName,\n      getterReturnType,\n      getterSignature,\n      getter,\n      getterContext,\n      setterArgumentType,\n      setterSignature,\n      setter,\n      setterContext,\n    ) => {\n      fieldName = readLatin1String(fieldName);\n      getter = embind__requireFunction(getterSignature, getter);\n      whenDependentTypesAreResolved([], [classType], (classType) => {\n        classType = classType[0];\n        var humanName = `${classType.name}.${fieldName}`;\n        var desc = {\n          get() {\n            throwUnboundTypeError(\n              `Cannot access ${humanName} due to unbound types`,\n              [getterReturnType, setterArgumentType],\n            );\n          },\n          enumerable: true,\n          configurable: true,\n        };\n        if (setter) {\n          desc.set = () =>\n            throwUnboundTypeError(\n              `Cannot access ${humanName} due to unbound types`,\n              [getterReturnType, setterArgumentType],\n            );\n        } else {\n          desc.set = (v) =>\n            throwBindingError(humanName + \" is a read-only property\");\n        }\n        Object.defineProperty(\n          classType.registeredClass.instancePrototype,\n          fieldName,\n          desc,\n        );\n        whenDependentTypesAreResolved(\n          [],\n          setter ? [getterReturnType, setterArgumentType] : [getterReturnType],\n          (types) => {\n            var getterReturnType = types[0];\n            var desc = {\n              get() {\n                var ptr = validateThis(this, classType, humanName + \" getter\");\n                return getterReturnType[\"fromWireType\"](\n                  getter(getterContext, ptr),\n                );\n              },\n              enumerable: true,\n            };\n            if (setter) {\n              setter = embind__requireFunction(setterSignature, setter);\n              var setterArgumentType = types[1];\n              desc.set = function (v) {\n                var ptr = validateThis(this, classType, humanName + \" setter\");\n                var destructors = [];\n                setter(\n                  setterContext,\n                  ptr,\n                  setterArgumentType[\"toWireType\"](destructors, v),\n                );\n                runDestructors(destructors);\n              };\n            }\n            Object.defineProperty(\n              classType.registeredClass.instancePrototype,\n              fieldName,\n              desc,\n            );\n            return [];\n          },\n        );\n        return [];\n      });\n    };\n    var __embind_register_constant = (name, type, value) => {\n      name = readLatin1String(name);\n      whenDependentTypesAreResolved([], [type], (type) => {\n        type = type[0];\n        Module[name] = type[\"fromWireType\"](value);\n        return [];\n      });\n    };\n    var emval_freelist = [];\n    var emval_handles = [];\n    var __emval_decref = (handle) => {\n      if (handle > 9 && 0 === --emval_handles[handle + 1]) {\n        emval_handles[handle] = undefined;\n        emval_freelist.push(handle);\n      }\n    };\n    var count_emval_handles = () =>\n      emval_handles.length / 2 - 5 - emval_freelist.length;\n    var init_emval = () => {\n      emval_handles.push(0, 1, undefined, 1, null, 1, true, 1, false, 1);\n      Module[\"count_emval_handles\"] = count_emval_handles;\n    };\n    var Emval = {\n      toValue: (handle) => {\n        if (!handle) {\n          throwBindingError(`Cannot use deleted val. handle = ${handle}`);\n        }\n        return emval_handles[handle];\n      },\n      toHandle: (value) => {\n        switch (value) {\n          case undefined:\n            return 2;\n          case null:\n            return 4;\n          case true:\n            return 6;\n          case false:\n            return 8;\n          default: {\n            const handle = emval_freelist.pop() || emval_handles.length;\n            emval_handles[handle] = value;\n            emval_handles[handle + 1] = 1;\n            return handle;\n          }\n        }\n      },\n    };\n    var EmValType = {\n      name: \"emscripten::val\",\n      fromWireType: (handle) => {\n        var rv = Emval.toValue(handle);\n        __emval_decref(handle);\n        return rv;\n      },\n      toWireType: (destructors, value) => Emval.toHandle(value),\n      argPackAdvance: GenericWireTypeSize,\n      readValueFromPointer: readPointer,\n      destructorFunction: null,\n    };\n    var __embind_register_emval = (rawType) => registerType(rawType, EmValType);\n    var enumReadValueFromPointer = (name, width, signed) => {\n      switch (width) {\n        case 1:\n          return signed\n            ? function (pointer) {\n                return this[\"fromWireType\"](HEAP8[pointer]);\n              }\n            : function (pointer) {\n                return this[\"fromWireType\"](HEAPU8[pointer]);\n              };\n        case 2:\n          return signed\n            ? function (pointer) {\n                return this[\"fromWireType\"](HEAP16[pointer >> 1]);\n              }\n            : function (pointer) {\n                return this[\"fromWireType\"](HEAPU16[pointer >> 1]);\n              };\n        case 4:\n          return signed\n            ? function (pointer) {\n                return this[\"fromWireType\"](HEAP32[pointer >> 2]);\n              }\n            : function (pointer) {\n                return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n              };\n        default:\n          throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n    var __embind_register_enum = (rawType, name, size, isSigned) => {\n      name = readLatin1String(name);\n      function ctor() {}\n      ctor.values = {};\n      registerType(rawType, {\n        name,\n        constructor: ctor,\n        fromWireType: function (c) {\n          return this.constructor.values[c];\n        },\n        toWireType: (destructors, c) => c.value,\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: enumReadValueFromPointer(name, size, isSigned),\n        destructorFunction: null,\n      });\n      exposePublicSymbol(name, ctor);\n    };\n    var requireRegisteredType = (rawType, humanName) => {\n      var impl = registeredTypes[rawType];\n      if (undefined === impl) {\n        throwBindingError(\n          `${humanName} has unknown type ${getTypeName(rawType)}`,\n        );\n      }\n      return impl;\n    };\n    var __embind_register_enum_value = (rawEnumType, name, enumValue) => {\n      var enumType = requireRegisteredType(rawEnumType, \"enum\");\n      name = readLatin1String(name);\n      var Enum = enumType.constructor;\n      var Value = Object.create(enumType.constructor.prototype, {\n        value: { value: enumValue },\n        constructor: {\n          value: createNamedFunction(\n            `${enumType.name}_${name}`,\n            function () {},\n          ),\n        },\n      });\n      Enum.values[enumValue] = Value;\n      Enum[name] = Value;\n    };\n    var floatReadValueFromPointer = (name, width) => {\n      switch (width) {\n        case 4:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n          };\n        case 8:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n          };\n        default:\n          throw new TypeError(`invalid float width (${width}): ${name}`);\n      }\n    };\n    var __embind_register_float = (rawType, name, size) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name,\n        fromWireType: (value) => value,\n        toWireType: (destructors, value) => value,\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: floatReadValueFromPointer(name, size),\n        destructorFunction: null,\n      });\n    };\n    var __embind_register_function = (\n      name,\n      argCount,\n      rawArgTypesAddr,\n      signature,\n      rawInvoker,\n      fn,\n      isAsync,\n      isNonnullReturn,\n    ) => {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n      name = getFunctionName(name);\n      rawInvoker = embind__requireFunction(signature, rawInvoker, isAsync);\n      exposePublicSymbol(\n        name,\n        function () {\n          throwUnboundTypeError(\n            `Cannot call ${name} due to unbound types`,\n            argTypes,\n          );\n        },\n        argCount - 1,\n      );\n      whenDependentTypesAreResolved([], argTypes, (argTypes) => {\n        var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\n        replacePublicSymbol(\n          name,\n          craftInvokerFunction(\n            name,\n            invokerArgsArray,\n            null,\n            rawInvoker,\n            fn,\n            isAsync,\n          ),\n          argCount - 1,\n        );\n        return [];\n      });\n    };\n    var __embind_register_integer = (\n      primitiveType,\n      name,\n      size,\n      minRange,\n      maxRange,\n    ) => {\n      name = readLatin1String(name);\n      if (maxRange === -1) {\n        maxRange = 4294967295;\n      }\n      var fromWireType = (value) => value;\n      if (minRange === 0) {\n        var bitshift = 32 - 8 * size;\n        fromWireType = (value) => (value << bitshift) >>> bitshift;\n      }\n      var isUnsignedType = name.includes(\"unsigned\");\n      var checkAssertions = (value, toTypeName) => {};\n      var toWireType;\n      if (isUnsignedType) {\n        toWireType = function (destructors, value) {\n          checkAssertions(value, this.name);\n          return value >>> 0;\n        };\n      } else {\n        toWireType = function (destructors, value) {\n          checkAssertions(value, this.name);\n          return value;\n        };\n      }\n      registerType(primitiveType, {\n        name,\n        fromWireType,\n        toWireType,\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: integerReadValueFromPointer(\n          name,\n          size,\n          minRange !== 0,\n        ),\n        destructorFunction: null,\n      });\n    };\n    var __embind_register_memory_view = (rawType, dataTypeIndex, name) => {\n      var typeMapping = [\n        Int8Array,\n        Uint8Array,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n        BigInt64Array,\n        BigUint64Array,\n      ];\n      var TA = typeMapping[dataTypeIndex];\n      function decodeMemoryView(handle) {\n        var size = HEAPU32[handle >> 2];\n        var data = HEAPU32[(handle + 4) >> 2];\n        return new TA(HEAP8.buffer, data, size);\n      }\n      name = readLatin1String(name);\n      registerType(\n        rawType,\n        {\n          name,\n          fromWireType: decodeMemoryView,\n          argPackAdvance: GenericWireTypeSize,\n          readValueFromPointer: decodeMemoryView,\n        },\n        { ignoreDuplicateRegistrations: true },\n      );\n    };\n    var __embind_register_smart_ptr = (\n      rawType,\n      rawPointeeType,\n      name,\n      sharingPolicy,\n      getPointeeSignature,\n      rawGetPointee,\n      constructorSignature,\n      rawConstructor,\n      shareSignature,\n      rawShare,\n      destructorSignature,\n      rawDestructor,\n    ) => {\n      name = readLatin1String(name);\n      rawGetPointee = embind__requireFunction(\n        getPointeeSignature,\n        rawGetPointee,\n      );\n      rawConstructor = embind__requireFunction(\n        constructorSignature,\n        rawConstructor,\n      );\n      rawShare = embind__requireFunction(shareSignature, rawShare);\n      rawDestructor = embind__requireFunction(\n        destructorSignature,\n        rawDestructor,\n      );\n      whenDependentTypesAreResolved(\n        [rawType],\n        [rawPointeeType],\n        (pointeeType) => {\n          pointeeType = pointeeType[0];\n          var registeredPointer = new RegisteredPointer(\n            name,\n            pointeeType.registeredClass,\n            false,\n            false,\n            true,\n            pointeeType,\n            sharingPolicy,\n            rawGetPointee,\n            rawConstructor,\n            rawShare,\n            rawDestructor,\n          );\n          return [registeredPointer];\n        },\n      );\n    };\n    var stringToUTF8 = (str, outPtr, maxBytesToWrite) =>\n      stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    var __embind_register_std_string = (rawType, name) => {\n      name = readLatin1String(name);\n      var stdStringIsUTF8 = true;\n      registerType(rawType, {\n        name,\n        fromWireType(value) {\n          var length = HEAPU32[value >> 2];\n          var payload = value + 4;\n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = payload;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = payload + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[payload + i]);\n            }\n            str = a.join(\"\");\n          }\n          _free(value);\n          return str;\n        },\n        toWireType(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n          var length;\n          var valueIsOfTypeString = typeof value == \"string\";\n          if (\n            !(\n              valueIsOfTypeString ||\n              (ArrayBuffer.isView(value) && value.BYTES_PER_ELEMENT == 1)\n            )\n          ) {\n            throwBindingError(\"Cannot pass non-string to std::string\");\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            length = lengthBytesUTF8(value);\n          } else {\n            length = value.length;\n          }\n          var base = _malloc(4 + length + 1);\n          var ptr = base + 4;\n          HEAPU32[base >> 2] = length;\n          if (valueIsOfTypeString) {\n            if (stdStringIsUTF8) {\n              stringToUTF8(value, ptr, length + 1);\n            } else {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(base);\n                  throwBindingError(\n                    \"String has UTF-16 code units that do not fit in 8 bits\",\n                  );\n                }\n                HEAPU8[ptr + i] = charCode;\n              }\n            }\n          } else {\n            HEAPU8.set(value, ptr);\n          }\n          if (destructors !== null) {\n            destructors.push(_free, base);\n          }\n          return base;\n        },\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: readPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        },\n      });\n    };\n    var UTF16Decoder =\n      typeof TextDecoder != \"undefined\"\n        ? new TextDecoder(\"utf-16le\")\n        : undefined;\n    var UTF16ToString = (ptr, maxBytesToRead) => {\n      var endPtr = ptr;\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n      endPtr = idx << 1;\n      if (endPtr - ptr > 32 && UTF16Decoder)\n        return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n      var str = \"\";\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[(ptr + i * 2) >> 1];\n        if (codeUnit == 0) break;\n        str += String.fromCharCode(codeUnit);\n      }\n      return str;\n    };\n    var stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\n      maxBytesToWrite ??= 2147483647;\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2;\n      var startPtr = outPtr;\n      var numCharsToWrite =\n        maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        HEAP16[outPtr >> 1] = codeUnit;\n        outPtr += 2;\n      }\n      HEAP16[outPtr >> 1] = 0;\n      return outPtr - startPtr;\n    };\n    var lengthBytesUTF16 = (str) => str.length * 2;\n    var UTF32ToString = (ptr, maxBytesToRead) => {\n      var i = 0;\n      var str = \"\";\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[(ptr + i * 4) >> 2];\n        if (utf32 == 0) break;\n        ++i;\n        if (utf32 >= 65536) {\n          var ch = utf32 - 65536;\n          str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    };\n    var stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\n      maxBytesToWrite ??= 2147483647;\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit =\n            (65536 + ((codeUnit & 1023) << 10)) | (trailSurrogate & 1023);\n        }\n        HEAP32[outPtr >> 2] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      HEAP32[outPtr >> 2] = 0;\n      return outPtr - startPtr;\n    };\n    var lengthBytesUTF32 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n        len += 4;\n      }\n      return len;\n    };\n    var __embind_register_std_wstring = (rawType, charSize, name) => {\n      name = readLatin1String(name);\n      var decodeString, encodeString, readCharAt, lengthBytesUTF;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        readCharAt = (pointer) => HEAPU16[pointer >> 1];\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        readCharAt = (pointer) => HEAPU32[pointer >> 2];\n      }\n      registerType(rawType, {\n        name,\n        fromWireType: (value) => {\n          var length = HEAPU32[value >> 2];\n          var str;\n          var decodeStartPtr = value + 4;\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || readCharAt(currentBytePtr) == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n          _free(value);\n          return str;\n        },\n        toWireType: (destructors, value) => {\n          if (!(typeof value == \"string\")) {\n            throwBindingError(\n              `Cannot pass non-string to C++ string type ${name}`,\n            );\n          }\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[ptr >> 2] = length / charSize;\n          encodeString(value, ptr + 4, length + charSize);\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        argPackAdvance: GenericWireTypeSize,\n        readValueFromPointer: readPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        },\n      });\n    };\n    var __embind_register_value_array = (\n      rawType,\n      name,\n      constructorSignature,\n      rawConstructor,\n      destructorSignature,\n      rawDestructor,\n    ) => {\n      tupleRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(\n          constructorSignature,\n          rawConstructor,\n        ),\n        rawDestructor: embind__requireFunction(\n          destructorSignature,\n          rawDestructor,\n        ),\n        elements: [],\n      };\n    };\n    var __embind_register_value_array_element = (\n      rawTupleType,\n      getterReturnType,\n      getterSignature,\n      getter,\n      getterContext,\n      setterArgumentType,\n      setterSignature,\n      setter,\n      setterContext,\n    ) => {\n      tupleRegistrations[rawTupleType].elements.push({\n        getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext,\n        setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext,\n      });\n    };\n    var __embind_register_value_object = (\n      rawType,\n      name,\n      constructorSignature,\n      rawConstructor,\n      destructorSignature,\n      rawDestructor,\n    ) => {\n      structRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(\n          constructorSignature,\n          rawConstructor,\n        ),\n        rawDestructor: embind__requireFunction(\n          destructorSignature,\n          rawDestructor,\n        ),\n        fields: [],\n      };\n    };\n    var __embind_register_value_object_field = (\n      structType,\n      fieldName,\n      getterReturnType,\n      getterSignature,\n      getter,\n      getterContext,\n      setterArgumentType,\n      setterSignature,\n      setter,\n      setterContext,\n    ) => {\n      structRegistrations[structType].fields.push({\n        fieldName: readLatin1String(fieldName),\n        getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext,\n        setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext,\n      });\n    };\n    var __embind_register_void = (rawType, name) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        isVoid: true,\n        name,\n        argPackAdvance: 0,\n        fromWireType: () => undefined,\n        toWireType: (destructors, o) => undefined,\n      });\n    };\n    var emval_returnValue = (returnType, destructorsRef, handle) => {\n      var destructors = [];\n      var result = returnType[\"toWireType\"](destructors, handle);\n      if (destructors.length) {\n        HEAPU32[destructorsRef >> 2] = Emval.toHandle(destructors);\n      }\n      return result;\n    };\n    var __emval_as = (handle, returnType, destructorsRef) => {\n      handle = Emval.toValue(handle);\n      returnType = requireRegisteredType(returnType, \"emval::as\");\n      return emval_returnValue(returnType, destructorsRef, handle);\n    };\n    var emval_symbols = {};\n    var getStringOrSymbol = (address) => {\n      var symbol = emval_symbols[address];\n      if (symbol === undefined) {\n        return readLatin1String(address);\n      }\n      return symbol;\n    };\n    var emval_methodCallers = [];\n    var __emval_call_method = (\n      caller,\n      objHandle,\n      methodName,\n      destructorsRef,\n      args,\n    ) => {\n      caller = emval_methodCallers[caller];\n      objHandle = Emval.toValue(objHandle);\n      methodName = getStringOrSymbol(methodName);\n      return caller(objHandle, objHandle[methodName], destructorsRef, args);\n    };\n    var emval_addMethodCaller = (caller) => {\n      var id = emval_methodCallers.length;\n      emval_methodCallers.push(caller);\n      return id;\n    };\n    var emval_lookupTypes = (argCount, argTypes) => {\n      var a = new Array(argCount);\n      for (var i = 0; i < argCount; ++i) {\n        a[i] = requireRegisteredType(\n          HEAPU32[(argTypes + i * 4) >> 2],\n          `parameter ${i}`,\n        );\n      }\n      return a;\n    };\n    var __emval_get_method_caller = (argCount, argTypes, kind) => {\n      var types = emval_lookupTypes(argCount, argTypes);\n      var retType = types.shift();\n      argCount--;\n      var functionBody = `return function (obj, func, destructorsRef, args) {\\n`;\n      var offset = 0;\n      var argsList = [];\n      if (kind === 0) {\n        argsList.push(\"obj\");\n      }\n      var params = [\"retType\"];\n      var args = [retType];\n      for (var i = 0; i < argCount; ++i) {\n        argsList.push(`arg${i}`);\n        params.push(`argType${i}`);\n        args.push(types[i]);\n        functionBody += `  var arg${i} = argType${i}.readValueFromPointer(args${offset ? \"+\" + offset : \"\"});\\n`;\n        offset += types[i].argPackAdvance;\n      }\n      var invoker = kind === 1 ? \"new func\" : \"func.call\";\n      functionBody += `  var rv = ${invoker}(${argsList.join(\", \")});\\n`;\n      if (!retType.isVoid) {\n        params.push(\"emval_returnValue\");\n        args.push(emval_returnValue);\n        functionBody +=\n          \"  return emval_returnValue(retType, destructorsRef, rv);\\n\";\n      }\n      functionBody += \"};\\n\";\n      var invokerFunction = new Function(...params, functionBody)(...args);\n      var functionName = `methodCaller<(${types.map((t) => t.name).join(\", \")}) => ${retType.name}>`;\n      return emval_addMethodCaller(\n        createNamedFunction(functionName, invokerFunction),\n      );\n    };\n    var __emval_get_property = (handle, key) => {\n      handle = Emval.toValue(handle);\n      key = Emval.toValue(key);\n      return Emval.toHandle(handle[key]);\n    };\n    var __emval_incref = (handle) => {\n      if (handle > 9) {\n        emval_handles[handle + 1] += 1;\n      }\n    };\n    var __emval_new_array = () => Emval.toHandle([]);\n    var __emval_new_cstring = (v) => Emval.toHandle(getStringOrSymbol(v));\n    var __emval_run_destructors = (handle) => {\n      var destructors = Emval.toValue(handle);\n      runDestructors(destructors);\n      __emval_decref(handle);\n    };\n    var __emval_set_property = (handle, key, value) => {\n      handle = Emval.toValue(handle);\n      key = Emval.toValue(key);\n      value = Emval.toValue(value);\n      handle[key] = value;\n    };\n    var __emval_take_value = (type, arg) => {\n      type = requireRegisteredType(type, \"_emval_take_value\");\n      var v = type[\"readValueFromPointer\"](arg);\n      return Emval.toHandle(v);\n    };\n    var __tzset_js = (timezone, daylight, std_name, dst_name) => {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n      var extractZone = (timezoneOffset) => {\n        var sign = timezoneOffset >= 0 ? \"-\" : \"+\";\n        var absOffset = Math.abs(timezoneOffset);\n        var hours = String(Math.floor(absOffset / 60)).padStart(2, \"0\");\n        var minutes = String(absOffset % 60).padStart(2, \"0\");\n        return `UTC${sign}${hours}${minutes}`;\n      };\n      var winterName = extractZone(winterOffset);\n      var summerName = extractZone(summerOffset);\n      if (summerOffset < winterOffset) {\n        stringToUTF8(winterName, std_name, 17);\n        stringToUTF8(summerName, dst_name, 17);\n      } else {\n        stringToUTF8(winterName, dst_name, 17);\n        stringToUTF8(summerName, std_name, 17);\n      }\n    };\n    var _emscripten_get_now = () => performance.now();\n    var _emscripten_date_now = () => Date.now();\n    var nowIsMonotonic = 1;\n    var checkWasiClock = (clock_id) => clock_id >= 0 && clock_id <= 3;\n    var INT53_MAX = 9007199254740992;\n    var INT53_MIN = -9007199254740992;\n    var bigintToI53Checked = (num) =>\n      num < INT53_MIN || num > INT53_MAX ? NaN : Number(num);\n    function _clock_time_get(clk_id, ignored_precision, ptime) {\n      ignored_precision = bigintToI53Checked(ignored_precision);\n      if (!checkWasiClock(clk_id)) {\n        return 28;\n      }\n      var now;\n      if (clk_id === 0) {\n        now = _emscripten_date_now();\n      } else if (nowIsMonotonic) {\n        now = _emscripten_get_now();\n      } else {\n        return 52;\n      }\n      var nsec = Math.round(now * 1e3 * 1e3);\n      HEAP64[ptime >> 3] = BigInt(nsec);\n      return 0;\n    }\n    var getHeapMax = () => 1073741824;\n    var _emscripten_get_heap_max = () => getHeapMax();\n    var alignMemory = (size, alignment) =>\n      Math.ceil(size / alignment) * alignment;\n    var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = ((size - b.byteLength + 65535) / 65536) | 0;\n      try {\n        wasmMemory.grow(pages);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    };\n    var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n      requestedSize >>>= 0;\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n        var newSize = Math.min(\n          maxHeapSize,\n          alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n        var replacement = growMemory(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var ENV = {};\n    var getExecutableName = () => thisProgram || \"./this.program\";\n    var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == \"object\" &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            \"C\"\n          ).replace(\"-\", \"_\") + \".UTF-8\";\n        var env = {\n          USER: \"web_user\",\n          LOGNAME: \"web_user\",\n          PATH: \"/\",\n          PWD: \"/\",\n          HOME: \"/home/web_user\",\n          LANG: lang,\n          _: getExecutableName(),\n        };\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n    var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      var envp = 0;\n      for (var string of getEnvStrings()) {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + envp) >> 2] = ptr;\n        bufSize += stringToUTF8(string, ptr, Infinity) + 1;\n        envp += 4;\n      }\n      return 0;\n    };\n    var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      for (var string of strings) {\n        bufSize += lengthBytesUTF8(string) + 1;\n      }\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    };\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset != \"undefined\") {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    function _fd_seek(fd, offset, whence, newOffset) {\n      offset = bigintToI53Checked(offset);\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        HEAP64[newOffset >> 3] = BigInt(stream.position);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) {\n          break;\n        }\n        if (typeof offset != \"undefined\") {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    var FS_createPath = FS.createPath;\n    var FS_unlink = (path) => FS.unlink(path);\n    var FS_createLazyFile = FS.createLazyFile;\n    var FS_createDevice = FS.createDevice;\n    Module[\"requestFullscreen\"] = Browser.requestFullscreen;\n    Module[\"setCanvasSize\"] = Browser.setCanvasSize;\n    Module[\"getUserMedia\"] = Browser.getUserMedia;\n    Module[\"createContext\"] = Browser.createContext;\n    FS.createPreloadedFile = FS_createPreloadedFile;\n    FS.staticInit();\n    Module[\"FS_createPath\"] = FS.createPath;\n    Module[\"FS_createDataFile\"] = FS.createDataFile;\n    Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n    Module[\"FS_unlink\"] = FS.unlink;\n    Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n    Module[\"FS_createDevice\"] = FS.createDevice;\n    MEMFS.doesNotExistError = new FS.ErrnoError(44);\n    MEMFS.doesNotExistError.stack = \"<generic error, no stack>\";\n    embind_init_charCodes();\n    init_ClassHandle();\n    init_RegisteredPointer();\n    init_emval();\n    {\n      if (Module[\"preloadPlugins\"]) preloadPlugins = Module[\"preloadPlugins\"];\n      if (Module[\"noExitRuntime\"]) noExitRuntime = Module[\"noExitRuntime\"];\n      if (Module[\"print\"]) out = Module[\"print\"];\n      if (Module[\"printErr\"]) err = Module[\"printErr\"];\n      if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n      if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n      if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n    }\n    Module[\"addRunDependency\"] = addRunDependency;\n    Module[\"removeRunDependency\"] = removeRunDependency;\n    Module[\"FS_createPreloadedFile\"] = FS_createPreloadedFile;\n    Module[\"FS_unlink\"] = FS_unlink;\n    Module[\"FS_createPath\"] = FS_createPath;\n    Module[\"FS_createDevice\"] = FS_createDevice;\n    Module[\"FS_createDataFile\"] = FS_createDataFile;\n    Module[\"FS_createLazyFile\"] = FS_createLazyFile;\n    var wasmImports = {\n      g: ___cxa_throw,\n      G: ___syscall_fcntl64,\n      S: ___syscall_ioctl,\n      H: ___syscall_openat,\n      L: __abort_js,\n      X: __embind_finalize_value_array,\n      p: __embind_finalize_value_object,\n      J: __embind_register_bigint,\n      V: __embind_register_bool,\n      j: __embind_register_class,\n      t: __embind_register_class_class_function,\n      e: __embind_register_class_constructor,\n      d: __embind_register_class_function,\n      f: __embind_register_class_property,\n      a: __embind_register_constant,\n      T: __embind_register_emval,\n      h: __embind_register_enum,\n      b: __embind_register_enum_value,\n      I: __embind_register_float,\n      c: __embind_register_function,\n      u: __embind_register_integer,\n      o: __embind_register_memory_view,\n      m: __embind_register_smart_ptr,\n      U: __embind_register_std_string,\n      E: __embind_register_std_wstring,\n      Y: __embind_register_value_array,\n      B: __embind_register_value_array_element,\n      q: __embind_register_value_object,\n      i: __embind_register_value_object_field,\n      W: __embind_register_void,\n      x: __emval_as,\n      r: __emval_call_method,\n      k: __emval_decref,\n      s: __emval_get_method_caller,\n      v: __emval_get_property,\n      z: __emval_incref,\n      y: __emval_new_array,\n      w: __emval_new_cstring,\n      n: __emval_run_destructors,\n      A: __emval_set_property,\n      l: __emval_take_value,\n      K: __tzset_js,\n      M: _clock_time_get,\n      O: _emscripten_get_heap_max,\n      N: _emscripten_resize_heap,\n      Q: _environ_get,\n      R: _environ_sizes_get,\n      D: _fd_close,\n      F: _fd_read,\n      P: _fd_seek,\n      C: _fd_write,\n    };\n    var wasmExports = await createWasm();\n    var ___wasm_call_ctors = wasmExports[\"_\"];\n    var ___getTypeName = wasmExports[\"$\"];\n    var _malloc = (Module[\"_malloc\"] = wasmExports[\"ba\"]);\n    var _free = (Module[\"_free\"] = wasmExports[\"ca\"]);\n    function run() {\n      if (runDependencies > 0) {\n        dependenciesFulfilled = run;\n        return;\n      }\n      preRun();\n      if (runDependencies > 0) {\n        dependenciesFulfilled = run;\n        return;\n      }\n      function doRun() {\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        readyPromiseResolve(Module);\n        Module[\"onRuntimeInitialized\"]?.();\n        postRun();\n      }\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(() => {\n          setTimeout(() => Module[\"setStatus\"](\"\"), 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n    function preInit() {\n      if (Module[\"preInit\"]) {\n        if (typeof Module[\"preInit\"] == \"function\")\n          Module[\"preInit\"] = [Module[\"preInit\"]];\n        while (Module[\"preInit\"].length > 0) {\n          Module[\"preInit\"].shift()();\n        }\n      }\n    }\n    preInit();\n    run();\n    if (typeof Module.FS === \"undefined\" && typeof FS !== \"undefined\") {\n      Module.FS = FS;\n    }\n    if (typeof cv === \"undefined\") {\n      var cv = Module;\n    }\n    Module[\"imread\"] = function (imageSource) {\n      var img = null;\n      if (typeof imageSource === \"string\") {\n        img = document.getElementById(imageSource);\n      } else {\n        img = imageSource;\n      }\n      var canvas = null;\n      var ctx = null;\n      if (img instanceof HTMLImageElement) {\n        canvas = document.createElement(\"canvas\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx = canvas.getContext(\"2d\", { willReadFrequently: true });\n        ctx.drawImage(img, 0, 0, img.width, img.height);\n      } else if (\n        img instanceof HTMLCanvasElement ||\n        img instanceof OffscreenCanvas\n      ) {\n        canvas = img;\n        ctx = canvas.getContext(\"2d\");\n      } else {\n        throw new Error(\"Please input the valid canvas or img id.\");\n      }\n      var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      return cv.matFromImageData(imgData);\n    };\n    Module[\"imshow\"] = function (canvasSource, mat) {\n      var canvas = null;\n      if (typeof canvasSource === \"string\") {\n        canvas = document.getElementById(canvasSource);\n      } else {\n        canvas = canvasSource;\n      }\n      if (!(canvas instanceof HTMLCanvasElement)) {\n        throw new Error(\"Please input the valid canvas element or id.\");\n      }\n      if (!(mat instanceof cv.Mat)) {\n        throw new Error(\"Please input the valid cv.Mat instance.\");\n      }\n      var img = new cv.Mat();\n      var depth = mat.type() % 8;\n      var scale = depth <= cv.CV_8S ? 1 : depth <= cv.CV_32S ? 1 / 256 : 255;\n      var shift = depth === cv.CV_8S || depth === cv.CV_16S ? 128 : 0;\n      mat.convertTo(img, cv.CV_8U, scale, shift);\n      switch (img.type()) {\n        case cv.CV_8UC1:\n          cv.cvtColor(img, img, cv.COLOR_GRAY2RGBA);\n          break;\n        case cv.CV_8UC3:\n          cv.cvtColor(img, img, cv.COLOR_RGB2RGBA);\n          break;\n        case cv.CV_8UC4:\n          break;\n        default:\n          throw new Error(\n            \"Bad number of channels (Source image must have 1, 3 or 4 channels)\",\n          );\n      }\n      var imgData = new ImageData(\n        new Uint8ClampedArray(img.data),\n        img.cols,\n        img.rows,\n      );\n      var ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.width = imgData.width;\n      canvas.height = imgData.height;\n      ctx.putImageData(imgData, 0, 0);\n      img.delete();\n    };\n    Module[\"VideoCapture\"] = function (videoSource) {\n      var video = null;\n      if (typeof videoSource === \"string\") {\n        video = document.getElementById(videoSource);\n      } else {\n        video = videoSource;\n      }\n      if (!(video instanceof HTMLVideoElement)) {\n        throw new Error(\"Please input the valid video element or id.\");\n      }\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = video.width;\n      canvas.height = video.height;\n      var ctx = canvas.getContext(\"2d\");\n      this.video = video;\n      this.read = function (frame) {\n        if (!(frame instanceof cv.Mat)) {\n          throw new Error(\"Please input the valid cv.Mat instance.\");\n        }\n        if (frame.type() !== cv.CV_8UC4) {\n          throw new Error(\n            \"Bad type of input mat: the type should be cv.CV_8UC4.\",\n          );\n        }\n        if (frame.cols !== video.width || frame.rows !== video.height) {\n          throw new Error(\n            \"Bad size of input mat: the size should be same as the video.\",\n          );\n        }\n        ctx.drawImage(video, 0, 0, video.width, video.height);\n        frame.data.set(ctx.getImageData(0, 0, video.width, video.height).data);\n      };\n    };\n    function Range(start, end) {\n      this.start = typeof start === \"undefined\" ? 0 : start;\n      this.end = typeof end === \"undefined\" ? 0 : end;\n    }\n    Module[\"Range\"] = Range;\n    function Point(x, y) {\n      this.x = typeof x === \"undefined\" ? 0 : x;\n      this.y = typeof y === \"undefined\" ? 0 : y;\n    }\n    Module[\"Point\"] = Point;\n    function Size(width, height) {\n      this.width = typeof width === \"undefined\" ? 0 : width;\n      this.height = typeof height === \"undefined\" ? 0 : height;\n    }\n    Module[\"Size\"] = Size;\n    function Rect() {\n      switch (arguments.length) {\n        case 0: {\n          this.x = 0;\n          this.y = 0;\n          this.width = 0;\n          this.height = 0;\n          break;\n        }\n        case 1: {\n          var rect = arguments[0];\n          this.x = rect.x;\n          this.y = rect.y;\n          this.width = rect.width;\n          this.height = rect.height;\n          break;\n        }\n        case 2: {\n          var point = arguments[0];\n          var size = arguments[1];\n          this.x = point.x;\n          this.y = point.y;\n          this.width = size.width;\n          this.height = size.height;\n          break;\n        }\n        case 4: {\n          this.x = arguments[0];\n          this.y = arguments[1];\n          this.width = arguments[2];\n          this.height = arguments[3];\n          break;\n        }\n        default: {\n          throw new Error(\"Invalid arguments\");\n        }\n      }\n    }\n    Module[\"Rect\"] = Rect;\n    function RotatedRect() {\n      switch (arguments.length) {\n        case 0: {\n          this.center = { x: 0, y: 0 };\n          this.size = { width: 0, height: 0 };\n          this.angle = 0;\n          break;\n        }\n        case 3: {\n          this.center = arguments[0];\n          this.size = arguments[1];\n          this.angle = arguments[2];\n          break;\n        }\n        default: {\n          throw new Error(\"Invalid arguments\");\n        }\n      }\n    }\n    RotatedRect.points = function (obj) {\n      return Module.rotatedRectPoints(obj);\n    };\n    RotatedRect.boundingRect = function (obj) {\n      return Module.rotatedRectBoundingRect(obj);\n    };\n    RotatedRect.boundingRect2f = function (obj) {\n      return Module.rotatedRectBoundingRect2f(obj);\n    };\n    Module[\"RotatedRect\"] = RotatedRect;\n    function Scalar(v0, v1, v2, v3) {\n      this.push(typeof v0 === \"undefined\" ? 0 : v0);\n      this.push(typeof v1 === \"undefined\" ? 0 : v1);\n      this.push(typeof v2 === \"undefined\" ? 0 : v2);\n      this.push(typeof v3 === \"undefined\" ? 0 : v3);\n    }\n    Scalar.prototype = new Array();\n    Scalar.all = function (v) {\n      return Scalar(v, v, v, v);\n    };\n    Module[\"Scalar\"] = Scalar;\n    function MinMaxLoc() {\n      switch (arguments.length) {\n        case 0: {\n          this.minVal = 0;\n          this.maxVal = 0;\n          this.minLoc = Point(0, 0);\n          this.maxLoc = Point(0, 0);\n          break;\n        }\n        case 4: {\n          this.minVal = arguments[0];\n          this.maxVal = arguments[1];\n          this.minLoc = arguments[2];\n          this.maxLoc = arguments[3];\n          break;\n        }\n        default: {\n          throw new Error(\"Invalid arguments\");\n        }\n      }\n    }\n    Module[\"MinMaxLoc\"] = MinMaxLoc;\n    function Circle() {\n      switch (arguments.length) {\n        case 0: {\n          this.center = Point(0, 0);\n          this.radius = 0;\n          break;\n        }\n        case 2: {\n          this.center = arguments[0];\n          this.radius = arguments[1];\n          break;\n        }\n        default: {\n          throw new Error(\"Invalid arguments\");\n        }\n      }\n    }\n    Module[\"Circle\"] = Circle;\n    function TermCriteria() {\n      switch (arguments.length) {\n        case 0: {\n          this.type = 0;\n          this.maxCount = 0;\n          this.epsilon = 0;\n          break;\n        }\n        case 3: {\n          this.type = arguments[0];\n          this.maxCount = arguments[1];\n          this.epsilon = arguments[2];\n          break;\n        }\n        default: {\n          throw new Error(\"Invalid arguments\");\n        }\n      }\n    }\n    Module[\"TermCriteria\"] = TermCriteria;\n    Module[\"matFromArray\"] = function (rows, cols, type, array) {\n      var mat = new cv.Mat(rows, cols, type);\n      switch (type) {\n        case cv.CV_8U:\n        case cv.CV_8UC1:\n        case cv.CV_8UC2:\n        case cv.CV_8UC3:\n        case cv.CV_8UC4: {\n          mat.data.set(array);\n          break;\n        }\n        case cv.CV_8S:\n        case cv.CV_8SC1:\n        case cv.CV_8SC2:\n        case cv.CV_8SC3:\n        case cv.CV_8SC4: {\n          mat.data8S.set(array);\n          break;\n        }\n        case cv.CV_16U:\n        case cv.CV_16UC1:\n        case cv.CV_16UC2:\n        case cv.CV_16UC3:\n        case cv.CV_16UC4: {\n          mat.data16U.set(array);\n          break;\n        }\n        case cv.CV_16S:\n        case cv.CV_16SC1:\n        case cv.CV_16SC2:\n        case cv.CV_16SC3:\n        case cv.CV_16SC4: {\n          mat.data16S.set(array);\n          break;\n        }\n        case cv.CV_32S:\n        case cv.CV_32SC1:\n        case cv.CV_32SC2:\n        case cv.CV_32SC3:\n        case cv.CV_32SC4: {\n          mat.data32S.set(array);\n          break;\n        }\n        case cv.CV_32F:\n        case cv.CV_32FC1:\n        case cv.CV_32FC2:\n        case cv.CV_32FC3:\n        case cv.CV_32FC4: {\n          mat.data32F.set(array);\n          break;\n        }\n        case cv.CV_64F:\n        case cv.CV_64FC1:\n        case cv.CV_64FC2:\n        case cv.CV_64FC3:\n        case cv.CV_64FC4: {\n          mat.data64F.set(array);\n          break;\n        }\n        default: {\n          throw new Error(\"Type is unsupported\");\n        }\n      }\n      return mat;\n    };\n    Module[\"matFromImageData\"] = function (imageData) {\n      var mat = new cv.Mat(imageData.height, imageData.width, cv.CV_8UC4);\n      mat.data.set(imageData.data);\n      return mat;\n    };\n    moduleRtn = readyPromise;\n\n    return moduleRtn;\n  };\n}\n\nexport default cv(opencvUrl);","/// <reference lib=\"webworker\" />\n/**\n * @file 处理条形码识别的线程\n * @author Yangholmes 2024-10-28\n */\n\nimport opencvjs from '@/assets/opencv/opencvImport.js';\n\nexport type BarcodeImgStream = ImageData;\n\nexport type BarcodeResult = {\n  corners: Float32Array;\n  result?: string | null;\n  output: Uint8ClampedArray\n}\n\n// cv 做一个缓存，如果已经初始化果，就直接使用\nlet _cv: any = null;\n\nfunction getCv() {\n  if (_cv) {\n    return Promise.resolve(_cv);\n  } else {\n    return opencvjs().then((res) => {\n      console.log(res);\n      _cv = res;\n      return _cv;\n    });\n  }\n}\n\nself.onmessage = (event: MessageEvent<BarcodeImgStream>) => {\n  const imgData = event.data;\n  getCv().then((cv) => {\n    if (cv) {\n      // console.log(cv.imread);\n      const src = cv.matFromImageData(imgData);\n\n      // 灰度化\n      let gray = new cv.Mat();\n      cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY);\n\n      // 去噪\n      // let denoised = new cv.Mat();\n      // cv.medianBlur(gray, denoised, 1);\n      let denoised  = new cv.Mat();\n      cv.GaussianBlur(gray, denoised, new cv.Size(3, 3), 0, 0, cv.BORDER_DEFAULT);\n\n      // 锐化\n      let sharpened = new cv.Mat();\n      cv.addWeighted(gray, 1.5, denoised, -0.5, 0, sharpened);\n\n      // 直方图均衡化\n      // let hist = new cv.Mat();\n      // cv.equalizeHist(denoised, hist);\n\n      // 自适应阈值\n      // let threshold = new cv.Mat();\n      // cv.adaptiveThreshold(sharpened, threshold, 255, cv.ADAPTIVE_THRESH_GAUSSIAN_C, cv.THRESH_BINARY, 3, 2);\n\n      // 创建 3x3 的核（全1矩阵）\n      // let kernel = cv.Mat.ones(1, 1, cv.CV_8U);\n\n      // 腐蚀\n      // let erosion = new cv.Mat();\n      // cv.erode(threshold, erosion , kernel, new cv.Point(-1, -1), 10, cv.BORDER_CONSTANT, cv.Scalar.all(0) );\n\n      // let dilation = new cv.Mat();\n      // cv.dilate(threshold, dilation , kernel, new cv.Point(-1, -1), 1, cv.BORDER_CONSTANT, cv.Scalar.all(255));\n\n      // 二值化\n      // let binary = new cv.Mat();\n      // cv.threshold(threshold, binary, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU);\n\n      // 去除反光，性能消耗太大了\n      // // 创建反光区域的掩码\n      // let mask = new cv.Mat();\n      // cv.threshold(gray, mask, 220, 255, cv.THRESH_BINARY);\n      // // 使用 inpainting 方法修复图像\n      // let antiReflect = new cv.Mat();\n      // cv.inpaint(denoised, mask, antiReflect, 21, cv.INPAINT_TELEA);\n\n      let barcodeDetector = new cv.barcode_BarcodeDetector();\n      let points = new cv.Mat();\n      let result = barcodeDetector.detectAndDecode(sharpened, points);\n\n      // 处理后的图像\n      let output = new cv.Mat();\n      cv.cvtColor(sharpened, output, cv.COLOR_RGBA2RGBA);\n      const img = new Uint8ClampedArray(output.data);\n\n      let corners = new Float32Array();\n\n      if (result.length > 0) {\n        console.log('barcode is: ', result);\n        corners = new Float32Array(points.data32F);\n      }\n\n      self.postMessage({\n        result,\n        corners,\n        output: img,\n      }, [\n        img.buffer,\n        corners.buffer\n      ]);\n\n      // 释放内存\n      src.delete();\n      gray.delete();\n      // mask.delete();\n      // antiReflect.delete();\n      // binary.delete();\n      denoised.delete();\n      sharpened.delete();\n      barcodeDetector.delete();\n      points.delete();\n      output.delete();\n    }\n    else {\n      self.postMessage({\n        result: null,\n        corners: null,\n        output: null,\n      });\n    }\n  });\n};\n"],"names":["opencvUrl","cv","path","_scriptName","_a","moduleArg","moduleRtn","Module","readyPromiseResolve","readyPromiseReject","readyPromise","resolve","reject","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","thisProgram","quit_","status","toThrow","scriptDirectory","locateFile","readAsync","readBinary","fs","filename","isFileURI","ret","binary","url","xhr","response","out","err","wasmBinary","wasmMemory","ABORT","EXITSTATUS","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAP64","HEAPU64","HEAPF64","updateMemoryViews","b","preRun","addOnPreRun","callRuntimeCallbacks","onPreRuns","initRuntime","FS","wasmExports","postRun","addOnPostRun","onPostRuns","runDependencies","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","abort","what","e","wasmBinaryFile","findWasmBinary","getBinarySync","file","getWasmBinary","binaryFile","instantiateArrayBuffer","imports","instance","reason","instantiateAsync","instantiationResult","getWasmImports","wasmImports","createWasm","receiveInstance","module","wasmTable","receiveInstantiationResult","result","info","mod","inst","exports","handleException","ExitStatus","__publicField","runtimeKeepaliveCounter","keepRuntimeAlive","noExitRuntime","_proc_exit","code","exitJS","implicit","_exit","maybeExit","callUserCallback","func","safeSetTimeout","timeout","preloadPlugins","Browser","imagePlugin","name","byteArray","onload","onerror","img","canvas","ctx","event","audioPlugin","done","finish","audio","encode64","data","BASE","PAD","leftchar","leftbits","i","curr","pointerLockChange","ev","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","attribute","lockPointer","resizeCanvas","fullscreenChange","canvasContainer","_b","CFS","delta","pageX","pageY","rect","scrollX","scrollY","adjustedX","adjustedY","x","y","touch","coords","last","listener","width","height","noUpdates","flags","wNative","hNative","w","h","factor","callbacks","cb","ExceptionInfo","excPtr","type","destructor","caught","rethrown","adjustedPtr","exceptionLast","___cxa_throw","ptr","syscallGetVarargI","SYSCALLS","syscallGetVarargP","PATH","splitPathRe","parts","allowAboveRoot","up","isAbsolute","trailingSlash","p","root","dir","paths","l","initRandomFill","nodeCrypto","view","randomFill","PATH_FS","args","resolvedPath","resolvedAbsolute","from","to","trim","arr","start","end","fromParts","toParts","length","samePartsLength","outputParts","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","str","u0","u1","u2","ch","FS_stdin_getChar_buffer","lengthBytesUTF8","len","c","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","FS_stdin_getChar","BUFSIZE","buf","bytesRead","fd","TTY","dev","ops","stream","tty","buffer","offset","pos","val","optional_actions","mmapAlloc","size","MEMFS","mount","parent","mode","node","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","oldContents","newSize","attr","key","old_node","new_dir","new_name","new_node","newname","oldpath","position","contents","canOwn","whence","prot","allocated","mmapFlags","asyncLoad","arrayBuffer","FS_createDataFile","fileData","canRead","canWrite","FS_handledByPreloadPlugin","fullname","handled","plugin","FS_createPreloadedFile","dontCreateFile","preFinish","processData","FS_modeStringToFlags","flagModes","FS_getMode","errno","rdev","opts","linkloop","nlinks","current","current_path","islast","link","parentid","hash","errCode","nodeName","flag","perms","isdir","op","origStream","setattr","arg","device","ma","mi","mounts","check","m","populate","completed","doCallback","mountpoint","pseudo","lookup","mountRoot","next","rtn","dirs","d","newpath","old_path","new_path","old_dirname","new_dirname","old_name","old_dir","relative","readdir","dontFollow","getattr","uid","gid","atime","mtime","isDirPath","created","seeking","bytesWritten","cmd","stat","actualNumBytes","randomBuffer","randomLeft","randomByte","proc_self","k","v","input","output","error","dontResolveLastLink","part","properties","obj","LazyUint8Array","chunkOffset","chunkNum","getter","datalength","header","hasByteServing","usesGzip","chunkSize","doXHR","lazyArray","stream_ops","keys","fn","writeChunks","UTF8ToString","dirfd","allowEmpty","dirstream","ctime","stats","addr","___syscall_fcntl64","varargs","newStream","___syscall_ioctl","termios","argp","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","winsize","___syscall_openat","__abort_js","tupleRegistrations","runDestructors","destructors","del","readPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","InternalError","message","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","__embind_finalize_value_array","rawTupleType","reg","elements","elementsLength","elementTypes","elt","rawConstructor","rawDestructor","getterReturnType","getterContext","setterArgumentType","setter","setterContext","o","rv","GenericWireTypeSize","structRegistrations","__embind_finalize_value_object","structType","fieldRecords","fieldTypes","field","fields","fieldName","optional","embindRepr","t","embind_init_charCodes","codes","embind_charCodes","readLatin1String","BindingError","throwBindingError","sharedRegisterType","rawType","registeredInstance","options","integerReadValueFromPointer","signed","__embind_register_bigint","primitiveType","minRange","maxRange","isUnsignedType","value","__embind_register_bool","trueValue","falseValue","wt","shallowCopyInternalPointer","throwInstanceAlreadyDeleted","getInstanceTypeName","handle","finalizationRegistry","detachFinalizer","runDestructor","$$","releaseClassHandle","toDelete","attachFinalizer","hasSmartPtr","deletionQueue","flushPendingDeletes","delayFunction","init_ClassHandle","proto","ClassHandle","other","leftClass","left","rightClass","right","clone","symbolDispose","createNamedFunction","registeredPointers","ensureOverloadTable","methodName","humanName","prevFunc","exposePublicSymbol","numArguments","char_0","char_9","makeLegalFunctionName","f","RegisteredClass","constructor","instancePrototype","baseClass","getActualType","upcast","downcast","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","handleClass","genericPointerToWireType","clonedHandle","Emval","nonConstNoSmartPtrRawPointerToWireType","downcastPointer","registeredInstances","getBasestPointer","class_","getInheritedInstance","makeClassHandle","prototype","record","hasSmartPtrType","RegisteredPointer_fromWireType","rawPointer","makeDefaultHandle","actualType","registeredPointerRecord","toType","dp","init_RegisteredPointer","RegisteredPointer","registeredClass","isReference","isConst","isSmartPointer","pointeeType","sharingPolicy","rawGetPointee","rawShare","replacePublicSymbol","wasmTableMirror","getWasmTableEntry","funcPtr","embind__requireFunction","signature","rawFunction","isAsync","makeDynCaller","fp","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","body","referenceConverter","pointerConverter","constPointerConverter","usesDestructorStack","argTypes","createJsInvoker","isClassMethodFunc","returns","needsDestructorStack","argCount","argsList","argsListWired","invokerFnBody","dtorStack","args1","paramName","craftInvokerFunction","classType","cppInvokerFunc","cppTargetFunc","closureArgs","invokerFn","heap32VectorToArray","count","firstElement","array","getFunctionName","argsIndex","__embind_register_class_class_function","rawClassType","rawArgTypesAddr","invokerSignature","rawInvoker","isNonnullReturn","rawArgTypes","unboundTypesHandler","invokerArgsArray","derivedClass","__embind_register_class_constructor","invoker","__embind_register_class_function","context","isPureVirtual","method","memberFunction","validateThis","this_","__embind_register_class_property","getterSignature","setterSignature","desc","__embind_register_constant","emval_freelist","emval_handles","__emval_decref","count_emval_handles","init_emval","EmValType","__embind_register_emval","enumReadValueFromPointer","__embind_register_enum","isSigned","ctor","requireRegisteredType","impl","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","floatReadValueFromPointer","__embind_register_float","__embind_register_function","__embind_register_integer","fromWireType","bitshift","checkAssertions","toTypeName","toWireType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","__embind_register_smart_ptr","rawPointeeType","getPointeeSignature","constructorSignature","shareSignature","registeredPointer","stringToUTF8","outPtr","__embind_register_std_string","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","valueIsOfTypeString","_malloc","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","readCharAt","lengthBytesUTF","maxReadBytes","__embind_register_value_array","__embind_register_value_array_element","__embind_register_value_object","__embind_register_value_object_field","__embind_register_void","emval_returnValue","returnType","destructorsRef","__emval_as","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","__emval_call_method","caller","objHandle","emval_addMethodCaller","emval_lookupTypes","a","__emval_get_method_caller","kind","retType","functionBody","params","invokerFunction","functionName","__emval_get_property","__emval_incref","__emval_new_array","__emval_new_cstring","__emval_run_destructors","__emval_set_property","__emval_take_value","__tzset_js","timezone","daylight","std_name","dst_name","currentYear","winter","summer","winterOffset","summerOffset","stdTimezoneOffset","extractZone","timezoneOffset","sign","absOffset","hours","minutes","winterName","summerName","_emscripten_get_now","_emscripten_date_now","checkWasiClock","clock_id","INT53_MAX","INT53_MIN","bigintToI53Checked","num","_clock_time_get","clk_id","ignored_precision","ptime","now","nsec","getHeapMax","_emscripten_get_heap_max","alignMemory","alignment","growMemory","pages","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","replacement","ENV","getExecutableName","getEnvStrings","lang","env","strings","_environ_get","__environ","environ_buf","bufSize","envp","string","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","doReadv","iov","iovcnt","_fd_read","pnum","_fd_seek","newOffset","doWritev","_fd_write","FS_createPath","FS_unlink","FS_createLazyFile","FS_createDevice","run","doRun","preInit","imageSource","imgData","canvasSource","mat","depth","scale","shift","videoSource","video","frame","Range","Point","Size","Rect","point","RotatedRect","Scalar","v0","v1","v2","v3","MinMaxLoc","Circle","TermCriteria","rows","cols","imageData","opencvjs","_cv","getCv","res","src","gray","denoised","sharpened","barcodeDetector","points","corners"],"mappings":"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"}