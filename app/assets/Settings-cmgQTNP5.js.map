{"version":3,"file":"Settings-cmgQTNP5.js","sources":["../../src/pages/settings/Settings.tsx"],"sourcesContent":["/**\n * @file settings list\n * @author Yangholmes 2025-03-18\n */\n\nimport { defineComponent, onMounted, ref } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport cn from 'classnames';\nimport useSettingsStore from '@/stores/settings';\n\nimport BasicLayout from '../layout/BasicLayout';\nimport BasicTopBar from '../layout/BasicTopBar';\nimport DoubleDeckerContainer from '@/components/doubleDeckerContainer/DoubleDeckerContainer';\nimport DeckerLayout from '../layout/DeckerLayout';\nimport SvgIcon from '@/components/svgIcon/SvgIcon';\n\nimport { NButton, useDialog, useMessage } from 'naive-ui';\n\nimport db from '@/services/db';\nimport { Setting } from '@/services/db/web/settings/db';\nimport { getControl, needOpenDecker, renderValue } from './utils';\nimport { deepToRaw } from '../vue-utils';\nimport { settingCatogory } from './config';\n\nimport styles from './settings.module.less';\n\nexport default defineComponent({\n  name: 'Settings',\n  setup() {\n    const { updateSettingMap } = useSettingsStore();\n    const { t } = useI18n({ useScope: 'global' });\n\n    const message = useMessage();\n    const dialog = useDialog();\n\n    const allSettings = ref<Setting[][]>([]);\n\n    const selectedCatogoryIndex = ref<number>();\n    const selectedSetting = ref<Setting>();\n\n    const init = () => {\n      return Promise.all(settingCatogory.map(catogory => db.settings.getSettingsByCategory(catogory))).then(res => {\n        allSettings.value = res;\n      });\n    };\n\n    onMounted(() => {\n      init();\n    });\n\n    const saveSetting = (setting: Setting) => {\n      const { key, value } = setting;\n      return db.settings.updateSettingByKey(key, value).then(() => {\n        message.success(t('pages.settings.decker.topbar.saveSuccess'));\n        updateSettingMap(key, value);\n      }).catch(() => {\n        message.error(t('pages.settings.decker.topbar.saveFailed'));\n        init();\n      });\n    };\n\n    const renderSettingControl = (back: () => void) => {\n      if (selectedSetting.value === undefined || selectedCatogoryIndex.value === undefined) {\n        back();\n        return <></>;\n      }\n      const s = selectedSetting.value;\n      return <DeckerLayout\n        topBar={<BasicTopBar\n          leftSlots={[<NButton\n            text\n            onClick={back}\n          >\n            {t('common.cancel')}\n          </NButton>]}\n          rightSlots={[<NButton\n            text\n            type=\"primary\"\n            onClick={() => {\n              const { key } = s;\n              const selectedCatogorySetting = allSettings.value[selectedCatogoryIndex.value!];\n              const index = selectedCatogorySetting.findIndex(se => se.key === key);\n              selectedCatogorySetting.splice(index, 1, s);\n              allSettings.value.splice(selectedCatogoryIndex.value!, 1, selectedCatogorySetting);\n\n              saveSetting(s).finally(() => {\n                selectedSetting.value = undefined;\n                selectedCatogoryIndex.value = undefined;\n                back();\n              });\n            }}\n          >\n            {t('common.save')}\n          </NButton>]}\n        />}\n      >\n        <div class={styles.control}>\n          <div>{t(s.label)}</div>\n          {getControl(s, (value) => {\n            s.value = value;\n          })}\n        </div>\n      </DeckerLayout>;\n    };\n\n    const renderSettings = (go: () => void) => (<BasicLayout topBar={\n      <BasicTopBar>\n        <SvgIcon name=\"setting\" /> {t('pages.settings.topbar.title')}\n      </BasicTopBar>\n    }>\n      <h2>{t('pages.settings.topbar.title')}</h2>\n      <ul class={cn(styles.list)}>\n        {allSettings.value.map((settings, index) => {\n          return <div class={cn(styles.catogory)}>\n            {settings.filter(setting => !setting.hidden).map((setting) => {\n              return <li\n                key={setting.key}\n                class={cn(styles.item)}\n                onClick={() => {\n                  if (needOpenDecker(setting)) {\n                    selectedCatogoryIndex.value = index;\n                    selectedSetting.value = deepToRaw(setting);\n                    go();\n                  }\n                }}\n              >\n                <span\n                  class={cn(styles.label)}\n                >{t(setting.label)}</span>\n                <span\n                  class={cn(styles.value)}\n                >\n                  {renderValue(setting, (value) => {\n                    setting.value = value;\n                    saveSetting(setting);\n                  })}\n                </span>\n              </li>;\n            })}\n          </div>;\n        })}\n        <div class={cn(styles.catogory)}>\n          <li class={cn(styles.item)} onClick={() => {\n            dialog.warning({\n              title: t('pages.settings.clearData.confirmDialog.title'),\n              content: t('pages.settings.clearData.confirmDialog.content'),\n              positiveText: t('common.yes'),\n              negativeText: t('common.thinkAgain'),\n              closable: false,\n              maskClosable: false,\n              onPositiveClick() {\n                Promise.all([\n                  db.book.clearAllBooks(),\n                  db.bookcase.clearAllBookcases(),\n                  db.settings.clearAllSettings()\n                ]).then(() => {\n                  message.success(t('pages.settings.clearData.confirmDialog.clearFinished'));\n                  setTimeout(() => {\n                    location.replace('./');\n                  }, 7e2);\n                });\n              }\n            });\n          }}>\n            <span class={cn(styles.label)}>{t('pages.settings.clearData.label')}</span>\n            <span class={cn(styles.value)}></span>\n          </li>\n        </div>\n      </ul>\n    </BasicLayout>);\n\n    return () => <DoubleDeckerContainer\n      class={cn(styles.settings)}\n      maskClosable={false}\n    >\n      {{\n        default: renderSettings,\n        decker: renderSettingControl\n      }}\n    </DoubleDeckerContainer>;\n  }\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","setup","updateSettingMap","useSettingsStore","t","useI18n","useScope","message","useMessage","dialog","useDialog","allSettings","ref","selectedCatogoryIndex","selectedSetting","init","Promise","all","settingCatogory","map","catogory","db","settings","getSettingsByCategory","then","res","value","onMounted","saveSetting","setting","key","updateSettingByKey","success","catch","error","renderSettingControl","back","_slot","_slot2","undefined","_createVNode","_Fragment","DeckerLayout","BasicTopBar","NButton","default","onClick","selectedCatogorySetting","index","findIndex","se","splice","finally","styles","control","label","getControl","renderSettings","go","BasicLayout","SvgIcon","_createTextVNode","cn","list","filter","hidden","item","needOpenDecker","deepToRaw","renderValue","warning","title","content","positiveText","negativeText","closable","maskClosable","onPositiveClick","book","clearAllBooks","bookcase","clearAllBookcases","clearAllSettings","setTimeout","location","replace","DoubleDeckerContainer","decker"],"mappings":"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"}