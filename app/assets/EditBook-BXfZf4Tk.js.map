{"version":3,"file":"EditBook-BXfZf4Tk.js","sources":["../../src/pages/book/edit/EditBook.tsx"],"sourcesContent":["/**\n * @file 新增图书\n * @author Yangholmes 2025-02-08\n */\n\nimport { defineComponent, onUnmounted, ref, watch } from 'vue';\n\nimport { useI18n } from 'vue-i18n';\nimport useTRouter from '@/composite/useTRouter';\n\nimport cn from 'classnames';\n\nimport { useNaiveFeedback } from '@/composite/useNaiveFeedback';\n\nimport BookForm from '../bookForm/BookForm';\nimport BasicLayout from '@/pages/layout/BasicLayout';\nimport BasicTopBar from '@/pages/layout/BasicTopBar';\nimport DeleteConfirmButton from '@/components/deleteConfirmButton/DeleteConfirmButton';\nimport SvgIcon from '@/components/svgIcon/SvgIcon';\n\nimport { NButton } from 'naive-ui';\n\nimport db from '@/services/db';\nimport { BookInCell, scrapeErrorMessage } from '../utils';\nimport { scrapeByIsbn } from '@/services/http';\n\nimport styles from './editbook.module.less';\n\nexport default defineComponent({\n  name: 'EditBook',\n  setup() {\n    const { t } = useI18n({ useScope: 'global' });\n    const { route, router } = useTRouter();\n    const { message } = useNaiveFeedback();\n\n    const bookFormRef = ref<typeof BookForm>();\n    const bookData = ref<BookInCell>();\n\n    const loading = ref(false);\n    const onQueryBook = (id: string) => {\n      loading.value = true;\n      db.book.queryBookByBookId(id).then(res => {\n        if (res) {\n          bookData.value = res;\n        }\n      }).finally(() => {\n        loading.value = false;\n      });\n    };\n\n    function scrape(_isbn?: string) {\n      loading.value = true;\n      return (_isbn ? Promise.resolve(_isbn) : Promise.reject()).then((isbn) => {\n        return scrapeByIsbn(isbn);\n      }).catch((err) => {\n        message.error(...scrapeErrorMessage(_isbn));\n        throw err;\n      }).finally(() => {\n        loading.value = false;\n      });\n    }\n\n    watch(() => route.params.bookId, (id) => {\n      if (!Array.isArray(id)) {\n        onQueryBook(id);\n      }\n    }, {\n      immediate: true,\n    });\n\n    function onSave() {\n      bookFormRef.value?.getFormData().then((res: BookInCell) => {\n        const bookFormData = res;\n        db.book.updateBook(bookFormData).then(() => {\n          message.success(t('pages.book.edit.saveSuccess'));\n        });\n      });\n    }\n\n    onUnmounted(() => {\n      message.destroyAll();\n    });\n\n    return () => {\n      return <div class={cn(styles['edit-book'])}>\n        <BasicLayout topBar={\n          (<BasicTopBar\n            rightSlots={[\n              <NButton onClick={onSave}>\n                <SvgIcon name=\"save\" />\n              </NButton>,\n              <DeleteConfirmButton\n                onConfirm={() => {\n                  const id = bookData.value?.id;\n                  id && db.book.deleteBook(id).then(() => {\n                    message.success(t('pages.book.edit.deleteSuccess'));\n                    router.back();\n                  });\n                }}\n              >\n                <SvgIcon name=\"delete\" />\n              </DeleteConfirmButton>\n            ]}\n          >\n            {bookData.value?.title || '-'}\n          </BasicTopBar>)\n        }>\n          <BookForm\n            ref={bookFormRef}\n            scraping={loading.value}\n            data={bookData.value}\n            onScrape={scrape}\n          />\n        </BasicLayout>\n      </div>;\n    };\n  }\n});\n"],"names":["defineComponent","name","setup","t","useI18n","useScope","route","router","useTRouter","message","useNaiveFeedback","bookFormRef","ref","bookData","loading","onQueryBook","id","value","db","book","queryBookByBookId","then","res","finally","scrape","_isbn","Promise","resolve","reject","isbn","scrapeByIsbn","catch","err","error","scrapeErrorMessage","watch","params","bookId","Array","isArray","immediate","onSave","getFormData","bookFormData","updateBook","success","onUnmounted","destroyAll","_createVNode","cn","styles","BasicLayout","BasicTopBar","NButton","default","SvgIcon","DeleteConfirmButton","onConfirm","deleteBook","back","title","BookForm"],"mappings":"4pBA4BeA,IAAgB,CAC7BC,KAAM,WACNC,OAAQ,CACN,KAAM,CAAEC,EAAAA,CAAG,EAAGC,EAAQ,CAAEC,SAAU,QAAS,CAAC,EACtC,CAAEC,MAAAA,EAAOC,OAAAA,CAAQ,EAAGC,EAAU,EAC9B,CAAEC,QAAAA,CAAS,EAAGC,EAAgB,EAE9BC,EAAcC,IACdC,EAAWD,IAEXE,EAAUF,EAAI,EAAK,EACnBG,EAAeC,GAAe,CAClCF,EAAQG,MAAQ,GAChBC,EAAGC,KAAKC,kBAAkBJ,CAAE,EAAEK,KAAKC,GAAO,CACpCA,IACFT,EAASI,MAAQK,EAErB,CAAC,EAAEC,QAAQ,IAAM,CACfT,EAAQG,MAAQ,EAClB,CAAC,GAGH,SAASO,EAAOC,EAAgB,CAC9BX,OAAAA,EAAQG,MAAQ,IACRQ,EAAQC,QAAQC,QAAQF,CAAK,EAAIC,QAAQE,OAAM,GAAIP,KAAMQ,GACxDC,EAAaD,CAAI,CACzB,EAAEE,MAAOC,GAAQ,CAChBvB,MAAAA,EAAQwB,MAAM,GAAGC,EAAmBT,CAAK,CAAC,EACpCO,CACR,CAAC,EAAET,QAAQ,IAAM,CACfT,EAAQG,MAAQ,EAClB,CAAC,CACH,CAEAkB,EAAM,IAAM7B,EAAM8B,OAAOC,OAASrB,GAAO,CAClCsB,MAAMC,QAAQvB,CAAE,GACnBD,EAAYC,CAAE,CAElB,EAAG,CACDwB,UAAW,EACb,CAAC,EAED,SAASC,GAAS,QAChB9B,EAAAA,EAAYM,QAAZN,MAAAA,EAAmB+B,cAAcrB,KAAMC,GAAoB,CACzD,MAAMqB,EAAerB,EACrBJ,EAAGC,KAAKyB,WAAWD,CAAY,EAAEtB,KAAK,IAAM,CAC1CZ,EAAQoC,QAAQ1C,EAAE,6BAA6B,CAAC,CAClD,CAAC,CACH,EACF,CAEA2C,OAAAA,EAAY,IAAM,CAChBrC,EAAQsC,WAAU,CACpB,CAAC,EAEM,IACLC,EAAA,MAAA,CAAA,MAAmBC,EAAGC,EAAO,WAAW,CAAC,GAACF,CAAAA,EAAAG,EAAA,CAAA,OAAAH,EAAAI,EAAA,CAAA,WAGxB,CAAAJ,EAAAK,EAAA,CAAA,QACQZ,CAAM,EAAA,CAAAa,QAAAA,IAAAN,CAAAA,EAAAO,EAAA,CAAA,KAAA,MAAA,EAAA,IAAA,CAAA,EAAAP,EAAAA,EAAAQ,EAAA,CAAA,UAIXC,IAAM,OACf,MAAMzC,GAAKH,EAAAA,EAASI,QAATJ,YAAAA,EAAgBG,GAC3BA,GAAME,EAAGC,KAAKuC,WAAW1C,CAAE,EAAEK,KAAK,IAAM,CACtCZ,EAAQoC,QAAQ1C,EAAE,+BAA+B,CAAC,EAClDI,EAAOoD,KAAI,CACb,CAAC,CACH,CAAC,EAAA,CAAAL,QAAAA,IAAAN,CAAAA,EAAAO,EAAA,CAAA,KAAA,QAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAIJ,EAAA,CAAAD,QAAAA,IAAAA,OAEAzC,SAAAA,EAAAA,EAASI,QAATJ,YAAAA,EAAgB+C,QAAS,GAAG,EAAA,CAAA,CAAA,EAAA,CAAAN,QAAAA,IAAAN,CAAAA,EAAAa,EAAA,CAAA,IAIxBlD,EAAW,SACNG,EAAQG,MAAK,KACjBJ,EAASI,MAAK,SACVO,CAAM,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAK1B,CACF,CAAC"}